import{jsx as e,jsxs as t,Fragment as n}from"react/jsx-runtime";import{createContext as s,useContext as o,memo as i,useState as r,useRef as a,useEffect as l,PureComponent as p,createRef as d,useMemo as h,Children as g,isValidElement as u,cloneElement as c}from"react";import*as m from"react-dom";import{createPortal as v}from"react-dom";function f(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}var L,y;var b=f(function(){if(y)return L;y=1;var e=process.env.NODE_ENV;return L=function(t,n,s,o,i,r,a,l){if("production"!==e&&void 0===n)throw new Error("invariant requires an error message argument");if(!t){var p;if(void 0===n)p=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var d=[s,o,i,r,a,l],h=0;(p=new Error(n.replace(/%s/g,(function(){return d[h++]})))).name="Invariant Violation"}throw p.framesToPop=1,p}}}());const M=s(null);function C(){b(!!o,"useGoogleMap is React hook and requires React version 16.8+");const e=o(M);return b(!!e,"useGoogleMap needs a GoogleMap available up in the tree"),e}function x(e,t,n,s){const o={};var i,r;return i=e,r=(e,i)=>{const r=n[i];r!==t[i]&&(o[i]=r,e(s,r))},Object.keys(i).forEach((e=>r(i[e],e))),o}function k(e,t,n){const s=(o=n,i=function(n,s,o){return"function"==typeof e[o]&&n.push(google.maps.event.addListener(t,s,e[o])),n},r=[],Object.keys(o).reduce((function(e,t){return i(e,o[t],t)}),r));var o,i,r;return s}function w(e){google.maps.event.removeListener(e)}function P(e=[]){e.forEach(w)}function E({updaterMap:e,eventMap:t,prevProps:n,nextProps:s,instance:o}){const i=k(s,o,t);return x(e,n,s,o),i}const S={onDblClick:"dblclick",onDragEnd:"dragend",onDragStart:"dragstart",onMapTypeIdChanged:"maptypeid_changed",onMouseMove:"mousemove",onMouseOut:"mouseout",onMouseOver:"mouseover",onMouseDown:"mousedown",onMouseUp:"mouseup",onRightClick:"rightclick",onTilesLoaded:"tilesloaded",onBoundsChanged:"bounds_changed",onCenterChanged:"center_changed",onClick:"click",onDrag:"drag",onHeadingChanged:"heading_changed",onIdle:"idle",onProjectionChanged:"projection_changed",onResize:"resize",onTiltChanged:"tilt_changed",onZoomChanged:"zoom_changed"},I={extraMapTypes(e,t){t.forEach((function(t,n){e.mapTypes.set(String(n),t)}))},center(e,t){e.setCenter(t)},clickableIcons(e,t){e.setClickableIcons(t)},heading(e,t){e.setHeading(t)},mapTypeId(e,t){e.setMapTypeId(t)},options(e,t){e.setOptions(t)},streetView(e,t){e.setStreetView(t)},tilt(e,t){e.setTilt(t)},zoom(e,t){e.setZoom(t)}};i((function({children:t,options:n,id:s,mapContainerStyle:o,mapContainerClassName:i,center:p,onClick:d,onDblClick:h,onDrag:g,onDragEnd:u,onDragStart:c,onMouseMove:m,onMouseOut:v,onMouseOver:f,onMouseDown:L,onMouseUp:y,onRightClick:b,onCenterChanged:C,onLoad:x,onUnmount:k}){const[w,P]=r(null),E=a(null),[S,I]=r(null),[D,O]=r(null),[B,_]=r(null),[T,U]=r(null),[z,R]=r(null),[A,Z]=r(null),[V,W]=r(null),[N,j]=r(null),[H,G]=r(null),[$,F]=r(null),[K,Y]=r(null),[q,J]=r(null);return l((()=>{n&&null!==w&&w.setOptions(n)}),[w,n]),l((()=>{null!==w&&void 0!==p&&w.setCenter(p)}),[w,p]),l((()=>{w&&h&&(null!==D&&google.maps.event.removeListener(D),O(google.maps.event.addListener(w,"dblclick",h)))}),[h]),l((()=>{w&&u&&(null!==B&&google.maps.event.removeListener(B),_(google.maps.event.addListener(w,"dragend",u)))}),[u]),l((()=>{w&&c&&(null!==T&&google.maps.event.removeListener(T),U(google.maps.event.addListener(w,"dragstart",c)))}),[c]),l((()=>{w&&L&&(null!==z&&google.maps.event.removeListener(z),R(google.maps.event.addListener(w,"mousedown",L)))}),[L]),l((()=>{w&&m&&(null!==A&&google.maps.event.removeListener(A),Z(google.maps.event.addListener(w,"mousemove",m)))}),[m]),l((()=>{w&&v&&(null!==V&&google.maps.event.removeListener(V),W(google.maps.event.addListener(w,"mouseout",v)))}),[v]),l((()=>{w&&f&&(null!==N&&google.maps.event.removeListener(N),j(google.maps.event.addListener(w,"mouseover",f)))}),[f]),l((()=>{w&&y&&(null!==H&&google.maps.event.removeListener(H),G(google.maps.event.addListener(w,"mouseup",y)))}),[y]),l((()=>{w&&b&&(null!==$&&google.maps.event.removeListener($),F(google.maps.event.addListener(w,"rightclick",b)))}),[b]),l((()=>{w&&d&&(null!==K&&google.maps.event.removeListener(K),Y(google.maps.event.addListener(w,"click",d)))}),[d]),l((()=>{w&&g&&(null!==q&&google.maps.event.removeListener(q),J(google.maps.event.addListener(w,"drag",g)))}),[g]),l((()=>{w&&C&&(null!==S&&google.maps.event.removeListener(S),I(google.maps.event.addListener(w,"center_changed",C)))}),[d]),l((()=>{const e=null===E.current?null:new google.maps.Map(E.current,n);return P(e),null!==e&&x&&x(e),()=>{null!==e&&k&&k(e)}}),[]),e("div",{id:s,ref:E,style:o,className:i,children:e(M.Provider,{value:w,children:null!==w?t:null})})}));class D extends p{state={map:null};registeredEvents=[];mapRef=null;getInstance=()=>null===this.mapRef?null:new google.maps.Map(this.mapRef,this.props.options);panTo=e=>{const t=this.getInstance();t&&t.panTo(e)};setMapCallback=()=>{null!==this.state.map&&this.props.onLoad&&this.props.onLoad(this.state.map)};componentDidMount(){const e=this.getInstance();this.registeredEvents=E({updaterMap:I,eventMap:S,prevProps:{},nextProps:this.props,instance:e}),this.setState((function(){return{map:e}}),this.setMapCallback)}componentDidUpdate(e){null!==this.state.map&&(P(this.registeredEvents),this.registeredEvents=E({updaterMap:I,eventMap:S,prevProps:e,nextProps:this.props,instance:this.state.map}))}componentWillUnmount(){null!==this.state.map&&(this.props.onUnmount&&this.props.onUnmount(this.state.map),P(this.registeredEvents))}getRef=e=>{this.mapRef=e};render(){return e("div",{id:this.props.id,ref:this.getRef,style:this.props.mapContainerStyle,className:this.props.mapContainerClassName,children:e(M.Provider,{value:this.state.map,children:null!==this.state.map?this.props.children:null})})}}function O({googleMapsApiKey:e,googleMapsClientId:t,version:n="weekly",language:s,region:o,libraries:i,channel:r,mapIds:a,authReferrerPolicy:l}){const p=[];return b(e&&t||!(e&&t),"You need to specify either googleMapsApiKey or googleMapsClientId for @react-google-maps/api load script to work. You cannot use both at the same time."),e?p.push(`key=${e}`):t&&p.push(`client=${t}`),n&&p.push(`v=${n}`),s&&p.push(`language=${s}`),o&&p.push(`region=${o}`),i&&i.length&&p.push(`libraries=${i.sort().join(",")}`),r&&p.push(`channel=${r}`),a&&a.length&&p.push(`map_ids=${a.join(",")}`),l&&p.push(`auth_referrer_policy=${l}`),p.push("loading=async"),p.push("callback=initMap"),`https://maps.googleapis.com/maps/api/js?${p.join("&")}`}const B="undefined"!=typeof document;function _({url:e,id:t,nonce:n}){return B?new Promise((function(s,o){const i=document.getElementById(t),r=window;if(i){const n=i.getAttribute("data-state");if(i.src===e&&"error"!==n){if("ready"===n)return s(t);{const e=r.initMap,n=i.onerror;return r.initMap=function(){e&&e(),s(t)},void(i.onerror=function(e){n&&n(e),o(e)})}}i.remove()}const a=document.createElement("script");a.type="text/javascript",a.src=e,a.id=t,a.async=!0,a.nonce=n||"",a.onerror=function(e){a.setAttribute("data-state","error"),o(e)},r.initMap=function(){a.setAttribute("data-state","ready"),s(t)},document.head.appendChild(a)})).catch((e=>{throw console.error("injectScript error: ",e),e})):Promise.reject(new Error("document is undefined"))}function T(e){const t=e.href;return!(!t||0!==t.indexOf("https://fonts.googleapis.com/css?family=Roboto")&&0!==t.indexOf("https://fonts.googleapis.com/css?family=Google+Sans+Text"))||("style"===e.tagName.toLowerCase()&&e.styleSheet&&e.styleSheet.cssText&&0===e.styleSheet.cssText.replace("\r\n","").indexOf(".gm-style")?(e.styleSheet.cssText="",!0):"style"===e.tagName.toLowerCase()&&e.innerHTML&&0===e.innerHTML.replace("\r\n","").indexOf(".gm-style")?(e.innerHTML="",!0):"style"===e.tagName.toLowerCase()&&!e.styleSheet&&!e.innerHTML)}function U(){const e=document.getElementsByTagName("head")[0];if(e){const t=e.insertBefore.bind(e);e.insertBefore=function(n,s){return T(n)||Reflect.apply(t,e,[n,s]),n};const n=e.appendChild.bind(e);e.appendChild=function(t){return T(t)||Reflect.apply(n,e,[t]),t}}}let z=!1;function R(){return e("div",{children:"Loading..."})}const A={id:"script-loader",version:"weekly"};class Z extends p{static defaultProps=A;check=d();state={loaded:!1};cleanupCallback=()=>{delete window.google.maps,this.injectScript()};componentDidMount(){if(B){if(window.google&&window.google.maps&&!z)return void console.error("google api is already presented");this.isCleaningUp().then(this.injectScript).catch((function(e){console.error("Error at injecting script after cleaning up: ",e)}))}}componentDidUpdate(e){this.props.libraries!==e.libraries&&console.warn("Performance warning! LoadScript has been reloaded unintentionally! You should not pass `libraries` prop as new array. Please keep an array of libraries as static class property for Components and PureComponents, or just a const variable outside of component, or somewhere in config files or ENV variables"),B&&e.language!==this.props.language&&(this.cleanup(),this.setState((function(){return{loaded:!1}}),this.cleanupCallback))}componentWillUnmount(){if(B){this.cleanup();const e=()=>{this.check.current||(delete window.google,z=!1)};window.setTimeout(e,1),this.props.onUnmount&&this.props.onUnmount()}}isCleaningUp=async()=>new Promise((function(e){if(z){if(B){const t=window.setInterval((function(){z||(window.clearInterval(t),e())}),1)}}else e()}));cleanup=()=>{z=!0;const e=document.getElementById(this.props.id);e&&e.parentNode&&e.parentNode.removeChild(e),Array.prototype.slice.call(document.getElementsByTagName("script")).filter((function(e){return"string"==typeof e.src&&e.src.includes("maps.googleapis")})).forEach((function(e){e.parentNode&&e.parentNode.removeChild(e)})),Array.prototype.slice.call(document.getElementsByTagName("link")).filter((function(e){return"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700|Google+Sans"===e.href})).forEach((function(e){e.parentNode&&e.parentNode.removeChild(e)})),Array.prototype.slice.call(document.getElementsByTagName("style")).filter((function(e){return void 0!==e.innerText&&e.innerText.length>0&&e.innerText.includes(".gm-")})).forEach((function(e){e.parentNode&&e.parentNode.removeChild(e)}))};injectScript=()=>{this.props.preventGoogleFontsLoading&&U(),b(!!this.props.id,'LoadScript requires "id" prop to be a string: %s',this.props.id);_({id:this.props.id,nonce:this.props.nonce,url:O(this.props)}).then((()=>{this.props.onLoad&&this.props.onLoad(),this.setState((function(){return{loaded:!0}}))})).catch((e=>{this.props.onError&&this.props.onError(e),console.error(`\n          There has been an Error with loading Google Maps API script, please check that you provided correct google API key (${this.props.googleMapsApiKey||"-"}) or Client ID (${this.props.googleMapsClientId||"-"}) to <LoadScript />\n          Otherwise it is a Network issue.\n        `)}))};render(){return t(n,{children:[e("div",{ref:this.check}),this.state.loaded?this.props.children:this.props.loadingElement||e(R,{})]})}}let V;function W({id:e=A.id,version:t=A.version,nonce:n,googleMapsApiKey:s,googleMapsClientId:o,language:i,region:p,libraries:d,preventGoogleFontsLoading:h,channel:g,mapIds:u,authReferrerPolicy:c}){const m=a(!1),[v,f]=r(!1),[L,y]=r(void 0);l((function(){return m.current=!0,()=>{m.current=!1}}),[]),l((function(){B&&h&&U()}),[h]),l((function(){v&&b(!!window.google,"useLoadScript was marked as loaded, but window.google is not present. Something went wrong.")}),[v]);const M=O({version:t,googleMapsApiKey:s,googleMapsClientId:o,language:i,region:p,libraries:d,channel:g,mapIds:u,authReferrerPolicy:c});l((function(){function t(){m.current&&(f(!0),V=M)}B&&(window.google&&window.google.maps&&V===M?t():_({id:e,url:M,nonce:n}).then(t).catch((function(e){m.current&&y(e),console.warn(`\n        There has been an Error with loading Google Maps API script, please check that you provided correct google API key (${s||"-"}) or Client ID (${o||"-"})\n        Otherwise it is a Network issue.\n      `),console.error(e)})))}),[e,M,n]);const C=a();return l((function(){C.current&&d!==C.current&&console.warn("Performance warning! LoadScript has been reloaded unintentionally! You should not pass `libraries` prop as new array. Please keep an array of libraries as static class property for Components and PureComponents, or just a const variable outside of component, or somewhere in config files or ENV variables"),C.current=d}),[d]),{isLoaded:v,loadError:L,url:M}}const N=e(R,{});var j=i((function({loadingElement:e,onLoad:t,onError:n,onUnmount:s,children:o,...i}){const{isLoaded:r,loadError:a}=W(i);return l((function(){r&&"function"==typeof t&&t()}),[r,t]),l((function(){a&&"function"==typeof n&&n(a)}),[a,n]),l((function(){return()=>{s&&s()}}),[s]),r?o:e||N}));function H(e,t,n,s){return new(n||(n=Promise))((function(t,o){function i(e){try{a(s.next(e))}catch(e){o(e)}}function r(e){try{a(s.throw(e))}catch(e){o(e)}}function a(e){var s;e.done?t(e.value):(s=e.value,s instanceof n?s:new n((function(e){e(s)}))).then(i,r)}a((s=s.apply(e,[])).next())}))}function G(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}"function"==typeof SuppressedError&&SuppressedError;var $=function e(t,n){if(t===n)return!0;if(t&&n&&"object"==typeof t&&"object"==typeof n){if(t.constructor!==n.constructor)return!1;var s,o,i;if(Array.isArray(t)){if((s=t.length)!=n.length)return!1;for(o=s;0!=o--;)if(!e(t[o],n[o]))return!1;return!0}if(t.constructor===RegExp)return t.source===n.source&&t.flags===n.flags;if(t.valueOf!==Object.prototype.valueOf)return t.valueOf()===n.valueOf();if(t.toString!==Object.prototype.toString)return t.toString()===n.toString();if((s=(i=Object.keys(t)).length)!==Object.keys(n).length)return!1;for(o=s;0!=o--;)if(!Object.prototype.hasOwnProperty.call(n,i[o]))return!1;for(o=s;0!=o--;){var r=i[o];if(!e(t[r],n[r]))return!1}return!0}return t!=t&&n!=n},F=G($);const K="__googleMapsScriptId";var Y;!function(e){e[e.INITIALIZED=0]="INITIALIZED",e[e.LOADING=1]="LOADING",e[e.SUCCESS=2]="SUCCESS",e[e.FAILURE=3]="FAILURE"}(Y||(Y={}));class q{constructor({apiKey:e,authReferrerPolicy:t,channel:n,client:s,id:o=K,language:i,libraries:r=[],mapIds:a,nonce:l,region:p,retries:d=3,url:h="https://maps.googleapis.com/maps/api/js",version:g}){if(this.callbacks=[],this.done=!1,this.loading=!1,this.errors=[],this.apiKey=e,this.authReferrerPolicy=t,this.channel=n,this.client=s,this.id=o||K,this.language=i,this.libraries=r,this.mapIds=a,this.nonce=l,this.region=p,this.retries=d,this.url=h,this.version=g,q.instance){if(!F(this.options,q.instance.options))throw new Error(`Loader must not be called again with different options. ${JSON.stringify(this.options)} !== ${JSON.stringify(q.instance.options)}`);return q.instance}q.instance=this}get options(){return{version:this.version,apiKey:this.apiKey,channel:this.channel,client:this.client,id:this.id,libraries:this.libraries,language:this.language,region:this.region,mapIds:this.mapIds,nonce:this.nonce,url:this.url,authReferrerPolicy:this.authReferrerPolicy}}get status(){return this.errors.length?Y.FAILURE:this.done?Y.SUCCESS:this.loading?Y.LOADING:Y.INITIALIZED}get failed(){return this.done&&!this.loading&&this.errors.length>=this.retries+1}createUrl(){let e=this.url;return e+="?callback=__googleMapsCallback&loading=async",this.apiKey&&(e+=`&key=${this.apiKey}`),this.channel&&(e+=`&channel=${this.channel}`),this.client&&(e+=`&client=${this.client}`),this.libraries.length>0&&(e+=`&libraries=${this.libraries.join(",")}`),this.language&&(e+=`&language=${this.language}`),this.region&&(e+=`&region=${this.region}`),this.version&&(e+=`&v=${this.version}`),this.mapIds&&(e+=`&map_ids=${this.mapIds.join(",")}`),this.authReferrerPolicy&&(e+=`&auth_referrer_policy=${this.authReferrerPolicy}`),e}deleteScript(){const e=document.getElementById(this.id);e&&e.remove()}load(){return this.loadPromise()}loadPromise(){return new Promise(((e,t)=>{this.loadCallback((n=>{n?t(n.error):e(window.google)}))}))}importLibrary(e){return this.execute(),google.maps.importLibrary(e)}loadCallback(e){this.callbacks.push(e),this.execute()}setScript(){var e,t;if(document.getElementById(this.id))return void this.callback();const n={key:this.apiKey,channel:this.channel,client:this.client,libraries:this.libraries.length&&this.libraries,v:this.version,mapIds:this.mapIds,language:this.language,region:this.region,authReferrerPolicy:this.authReferrerPolicy};Object.keys(n).forEach((e=>!n[e]&&delete n[e])),(null===(t=null===(e=null===window||void 0===window?void 0:window.google)||void 0===e?void 0:e.maps)||void 0===t?void 0:t.importLibrary)||(e=>{let t,n,s,o="The Google Maps JavaScript API",i="google",r="importLibrary",a="__ib__",l=document,p=window;p=p[i]||(p[i]={});const d=p.maps||(p.maps={}),h=new Set,g=new URLSearchParams,u=()=>t||(t=new Promise(((r,p)=>H(this,0,void 0,(function*(){var u;for(s in yield n=l.createElement("script"),n.id=this.id,g.set("libraries",[...h]+""),e)g.set(s.replace(/[A-Z]/g,(e=>"_"+e[0].toLowerCase())),e[s]);g.set("callback",i+".maps."+a),n.src=this.url+"?"+g,d[a]=r,n.onerror=()=>t=p(Error(o+" could not load.")),n.nonce=this.nonce||(null===(u=l.querySelector("script[nonce]"))||void 0===u?void 0:u.nonce)||"",l.head.append(n)})))));d[r]?console.warn(o+" only loads once. Ignoring:",e):d[r]=(e,...t)=>h.add(e)&&u().then((()=>d[r](e,...t)))})(n);const s=this.libraries.map((e=>this.importLibrary(e)));s.length||s.push(this.importLibrary("core")),Promise.all(s).then((()=>this.callback()),(e=>{const t=new ErrorEvent("error",{error:e});this.loadErrorCallback(t)}))}reset(){this.deleteScript(),this.done=!1,this.loading=!1,this.errors=[],this.onerrorEvent=null}resetIfRetryingFailed(){this.failed&&this.reset()}loadErrorCallback(e){if(this.errors.push(e),this.errors.length<=this.retries){const e=this.errors.length*Math.pow(2,this.errors.length);console.error(`Failed to load Google Maps script, retrying in ${e} ms.`),setTimeout((()=>{this.deleteScript(),this.setScript()}),e)}else this.onerrorEvent=e,this.callback()}callback(){this.done=!0,this.loading=!1,this.callbacks.forEach((e=>{e(this.onerrorEvent)})),this.callbacks=[]}execute(){if(this.resetIfRetryingFailed(),!this.loading)if(this.done)this.callback();else{if(window.google&&window.google.maps&&window.google.maps.version)return console.warn("Google Maps already loaded outside @googlemaps/js-api-loader. This may result in undesirable behavior as options and script parameters may not match."),void this.callback();this.loading=!0,this.setScript()}}}const J=["maps"];function X({id:e=A.id,version:t=A.version,nonce:n,googleMapsApiKey:s,language:o,region:i,libraries:p=J,preventGoogleFontsLoading:d,mapIds:g,authReferrerPolicy:u}){const c=a(!1),[m,v]=r(!1),[f,L]=r(void 0);l((function(){return c.current=!0,()=>{c.current=!1}}),[]);const y=h((()=>new q({id:e,apiKey:s,version:t,libraries:p,language:o||"en",region:i||"US",mapIds:g||[],nonce:n||"",authReferrerPolicy:u||"origin"})),[e,s,t,p,o,i,g,n,u]);l((function(){m||y.load().then((()=>{c.current&&v(!0)})).catch((e=>{L(e)}))}),[]),l((()=>{B&&d&&U()}),[d]);const b=a();return l((()=>{b.current&&p!==b.current&&console.warn("Performance warning! LoadScript has been reloaded unintentionally! You should not pass `libraries` prop as new array. Please keep an array of libraries as static class property for Components and PureComponents, or just a const variable outside of component, or somewhere in config files or ENV variables"),b.current=p}),[p]),{isLoaded:m,loadError:f}}const Q={},ee={options(e,t){e.setOptions(t)}};const te=i((function({options:e,onLoad:t,onUnmount:n}){const s=o(M),[i,a]=r(null);return l((()=>{null!==i&&i.setMap(s)}),[s]),l((()=>{e&&null!==i&&i.setOptions(e)}),[i,e]),l((()=>{const o=new google.maps.TrafficLayer({...e,map:s});return a(o),t&&t(o),()=>{null!==i&&(n&&n(i),i.setMap(null))}}),[]),null}));class ne extends p{static contextType=M;state={trafficLayer:null};setTrafficLayerCallback=()=>{null!==this.state.trafficLayer&&this.props.onLoad&&this.props.onLoad(this.state.trafficLayer)};registeredEvents=[];componentDidMount(){const e=new google.maps.TrafficLayer({...this.props.options,map:this.context});this.registeredEvents=E({updaterMap:ee,eventMap:Q,prevProps:{},nextProps:this.props,instance:e}),this.setState((function(){return{trafficLayer:e}}),this.setTrafficLayerCallback)}componentDidUpdate(e){null!==this.state.trafficLayer&&(P(this.registeredEvents),this.registeredEvents=E({updaterMap:ee,eventMap:Q,prevProps:e,nextProps:this.props,instance:this.state.trafficLayer}))}componentWillUnmount(){null!==this.state.trafficLayer&&(this.props.onUnmount&&this.props.onUnmount(this.state.trafficLayer),P(this.registeredEvents),this.state.trafficLayer.setMap(null))}render(){return null}}const se=i((function({onLoad:e,onUnmount:t}){const n=o(M),[s,i]=r(null);return l((()=>{null!==s&&s.setMap(n)}),[n]),l((()=>{const s=new google.maps.BicyclingLayer;return i(s),s.setMap(n),e&&e(s),()=>{null!==s&&(t&&t(s),s.setMap(null))}}),[]),null}));class oe extends p{static contextType=M;state={bicyclingLayer:null};componentDidMount(){const e=new google.maps.BicyclingLayer;this.setState((()=>({bicyclingLayer:e})),this.setBicyclingLayerCallback)}componentWillUnmount(){null!==this.state.bicyclingLayer&&(this.props.onUnmount&&this.props.onUnmount(this.state.bicyclingLayer),this.state.bicyclingLayer.setMap(null))}setBicyclingLayerCallback=()=>{null!==this.state.bicyclingLayer&&(this.state.bicyclingLayer.setMap(this.context),this.props.onLoad&&this.props.onLoad(this.state.bicyclingLayer))};render(){return null}}const ie=i((function({onLoad:e,onUnmount:t}){const n=o(M),[s,i]=r(null);return l((()=>{null!==s&&s.setMap(n)}),[n]),l((()=>{const o=new google.maps.TransitLayer;return i(o),o.setMap(n),e&&e(o),()=>{null!==s&&(t&&t(s),s.setMap(null))}}),[]),null}));class re extends p{static contextType=M;state={transitLayer:null};setTransitLayerCallback=()=>{null!==this.state.transitLayer&&(this.state.transitLayer.setMap(this.context),this.props.onLoad&&this.props.onLoad(this.state.transitLayer))};componentDidMount(){const e=new google.maps.TransitLayer;this.setState((function(){return{transitLayer:e}}),this.setTransitLayerCallback)}componentWillUnmount(){null!==this.state.transitLayer&&(this.props.onUnmount&&this.props.onUnmount(this.state.transitLayer),this.state.transitLayer.setMap(null))}render(){return null}}const ae={onCircleComplete:"circlecomplete",onMarkerComplete:"markercomplete",onOverlayComplete:"overlaycomplete",onPolygonComplete:"polygoncomplete",onPolylineComplete:"polylinecomplete",onRectangleComplete:"rectanglecomplete"},le={drawingMode(e,t){e.setDrawingMode(t)},options(e,t){e.setOptions(t)}};const pe=i((function({options:e,drawingMode:t,onCircleComplete:n,onMarkerComplete:s,onOverlayComplete:i,onPolygonComplete:a,onPolylineComplete:p,onRectangleComplete:d,onLoad:h,onUnmount:g}){const u=o(M),[c,m]=r(null),[v,f]=r(null),[L,y]=r(null),[C,x]=r(null),[k,w]=r(null),[P,E]=r(null),[S,I]=r(null);return l((()=>{null!==c&&c.setMap(u)}),[u]),l((()=>{e&&null!==c&&c.setOptions(e)}),[c,e]),l((()=>{null!==c&&c.setDrawingMode(t??null)}),[c,t]),l((()=>{c&&n&&(null!==v&&google.maps.event.removeListener(v),f(google.maps.event.addListener(c,"circlecomplete",n)))}),[c,n]),l((()=>{c&&s&&(null!==L&&google.maps.event.removeListener(L),y(google.maps.event.addListener(c,"markercomplete",s)))}),[c,s]),l((()=>{c&&i&&(null!==C&&google.maps.event.removeListener(C),x(google.maps.event.addListener(c,"overlaycomplete",i)))}),[c,i]),l((()=>{c&&a&&(null!==k&&google.maps.event.removeListener(k),w(google.maps.event.addListener(c,"polygoncomplete",a)))}),[c,a]),l((()=>{c&&p&&(null!==P&&google.maps.event.removeListener(P),E(google.maps.event.addListener(c,"polylinecomplete",p)))}),[c,p]),l((()=>{c&&d&&(null!==S&&google.maps.event.removeListener(S),I(google.maps.event.addListener(c,"rectanglecomplete",d)))}),[c,d]),l((()=>{b(!!google.maps.drawing,"Did you include prop libraries={['drawing']} in the URL? %s",google.maps.drawing);const o=new google.maps.drawing.DrawingManager({...e,map:u});return t&&o.setDrawingMode(t),n&&f(google.maps.event.addListener(o,"circlecomplete",n)),s&&y(google.maps.event.addListener(o,"markercomplete",s)),i&&x(google.maps.event.addListener(o,"overlaycomplete",i)),a&&w(google.maps.event.addListener(o,"polygoncomplete",a)),p&&E(google.maps.event.addListener(o,"polylinecomplete",p)),d&&I(google.maps.event.addListener(o,"rectanglecomplete",d)),m(o),h&&h(o),()=>{null!==c&&(v&&google.maps.event.removeListener(v),L&&google.maps.event.removeListener(L),C&&google.maps.event.removeListener(C),k&&google.maps.event.removeListener(k),P&&google.maps.event.removeListener(P),S&&google.maps.event.removeListener(S),g&&g(c),c.setMap(null))}}),[]),null}));class de extends p{static contextType=M;registeredEvents=[];state={drawingManager:null};constructor(e){super(e),b(!!google.maps.drawing,"Did you include prop libraries={['drawing']} in the URL? %s",google.maps.drawing)}setDrawingManagerCallback=()=>{null!==this.state.drawingManager&&this.props.onLoad&&this.props.onLoad(this.state.drawingManager)};componentDidMount(){const e=new google.maps.drawing.DrawingManager({...this.props.options,map:this.context});this.registeredEvents=E({updaterMap:le,eventMap:ae,prevProps:{},nextProps:this.props,instance:e}),this.setState((function(){return{drawingManager:e}}),this.setDrawingManagerCallback)}componentDidUpdate(e){null!==this.state.drawingManager&&(P(this.registeredEvents),this.registeredEvents=E({updaterMap:le,eventMap:ae,prevProps:e,nextProps:this.props,instance:this.state.drawingManager}))}componentWillUnmount(){null!==this.state.drawingManager&&(this.props.onUnmount&&this.props.onUnmount(this.state.drawingManager),P(this.registeredEvents),this.state.drawingManager.setMap(null))}render(){return null}}const he={onAnimationChanged:"animation_changed",onClick:"click",onClickableChanged:"clickable_changed",onCursorChanged:"cursor_changed",onDblClick:"dblclick",onDrag:"drag",onDragEnd:"dragend",onDraggableChanged:"draggable_changed",onDragStart:"dragstart",onFlatChanged:"flat_changed",onIconChanged:"icon_changed",onMouseDown:"mousedown",onMouseOut:"mouseout",onMouseOver:"mouseover",onMouseUp:"mouseup",onPositionChanged:"position_changed",onRightClick:"rightclick",onShapeChanged:"shape_changed",onTitleChanged:"title_changed",onVisibleChanged:"visible_changed",onZindexChanged:"zindex_changed"},ge={animation(e,t){e.setAnimation(t)},clickable(e,t){e.setClickable(t)},cursor(e,t){e.setCursor(t)},draggable(e,t){e.setDraggable(t)},icon(e,t){e.setIcon(t)},label(e,t){e.setLabel(t)},map(e,t){e.setMap(t)},opacity(e,t){e.setOpacity(t)},options(e,t){e.setOptions(t)},position(e,t){e.setPosition(t)},shape(e,t){e.setShape(t)},title(e,t){e.setTitle(t)},visible(e,t){e.setVisible(t)},zIndex(e,t){e.setZIndex(t)}},ue={};const ce=i((function({position:t,options:s,clusterer:i,noClustererRedraw:a,children:p,draggable:d,visible:m,animation:v,clickable:f,cursor:L,icon:y,label:b,opacity:C,shape:x,title:k,zIndex:w,onClick:P,onDblClick:E,onDrag:S,onDragEnd:I,onDragStart:D,onMouseOut:O,onMouseOver:B,onMouseUp:_,onMouseDown:T,onRightClick:U,onClickableChanged:z,onCursorChanged:R,onAnimationChanged:A,onDraggableChanged:Z,onFlatChanged:V,onIconChanged:W,onPositionChanged:N,onShapeChanged:j,onTitleChanged:H,onVisibleChanged:G,onZindexChanged:$,onLoad:F,onUnmount:K}){const Y=o(M),[q,J]=r(null),[X,Q]=r(null),[ee,te]=r(null),[ne,se]=r(null),[oe,ie]=r(null),[re,ae]=r(null),[le,pe]=r(null),[de,he]=r(null),[ge,ce]=r(null),[me,ve]=r(null),[fe,Le]=r(null),[ye,be]=r(null),[Me,Ce]=r(null),[xe,ke]=r(null),[we,Pe]=r(null),[Ee,Se]=r(null),[Ie,De]=r(null),[Oe,Be]=r(null),[_e,Te]=r(null),[Ue,ze]=r(null),[Re,Ae]=r(null),[Ze,Ve]=r(null);l((()=>{null!==q&&q.setMap(Y)}),[Y]),l((()=>{void 0!==s&&null!==q&&q.setOptions(s)}),[q,s]),l((()=>{void 0!==d&&null!==q&&q.setDraggable(d)}),[q,d]),l((()=>{t&&null!==q&&q.setPosition(t)}),[q,t]),l((()=>{void 0!==m&&null!==q&&q.setVisible(m)}),[q,m]),l((()=>{q?.setAnimation(v)}),[q,v]),l((()=>{q&&void 0!==f&&q.setClickable(f)}),[q,f]),l((()=>{q&&void 0!==L&&q.setCursor(L)}),[q,L]),l((()=>{q&&void 0!==y&&q.setIcon(y)}),[q,y]),l((()=>{q&&void 0!==b&&q.setLabel(b)}),[q,b]),l((()=>{q&&void 0!==C&&q.setOpacity(C)}),[q,C]),l((()=>{q&&void 0!==x&&q.setShape(x)}),[q,x]),l((()=>{q&&void 0!==k&&q.setTitle(k)}),[q,k]),l((()=>{q&&void 0!==w&&q.setZIndex(w)}),[q,w]),l((()=>{q&&E&&(null!==X&&google.maps.event.removeListener(X),Q(google.maps.event.addListener(q,"dblclick",E)))}),[E]),l((()=>{q&&I&&(null!==ee&&google.maps.event.removeListener(ee),te(google.maps.event.addListener(q,"dragend",I)))}),[I]),l((()=>{q&&D&&(null!==ne&&google.maps.event.removeListener(ne),se(google.maps.event.addListener(q,"dragstart",D)))}),[D]),l((()=>{q&&T&&(null!==oe&&google.maps.event.removeListener(oe),ie(google.maps.event.addListener(q,"mousedown",T)))}),[T]),l((()=>{q&&O&&(null!==re&&google.maps.event.removeListener(re),ae(google.maps.event.addListener(q,"mouseout",O)))}),[O]),l((()=>{q&&B&&(null!==le&&google.maps.event.removeListener(le),pe(google.maps.event.addListener(q,"mouseover",B)))}),[B]),l((()=>{q&&_&&(null!==de&&google.maps.event.removeListener(de),he(google.maps.event.addListener(q,"mouseup",_)))}),[_]),l((()=>{q&&U&&(null!==ge&&google.maps.event.removeListener(ge),ce(google.maps.event.addListener(q,"rightclick",U)))}),[U]),l((()=>{q&&P&&(null!==me&&google.maps.event.removeListener(me),ve(google.maps.event.addListener(q,"click",P)))}),[P]),l((()=>{q&&S&&(null!==fe&&google.maps.event.removeListener(fe),Le(google.maps.event.addListener(q,"drag",S)))}),[S]),l((()=>{q&&z&&(null!==ye&&google.maps.event.removeListener(ye),be(google.maps.event.addListener(q,"clickable_changed",z)))}),[z]),l((()=>{q&&R&&(null!==Me&&google.maps.event.removeListener(Me),Ce(google.maps.event.addListener(q,"cursor_changed",R)))}),[R]),l((()=>{q&&A&&(null!==xe&&google.maps.event.removeListener(xe),ke(google.maps.event.addListener(q,"animation_changed",A)))}),[A]),l((()=>{q&&Z&&(null!==we&&google.maps.event.removeListener(we),Pe(google.maps.event.addListener(q,"draggable_changed",Z)))}),[Z]),l((()=>{q&&V&&(null!==Ee&&google.maps.event.removeListener(Ee),Se(google.maps.event.addListener(q,"flat_changed",V)))}),[V]),l((()=>{q&&W&&(null!==Ie&&google.maps.event.removeListener(Ie),De(google.maps.event.addListener(q,"icon_changed",W)))}),[W]),l((()=>{q&&N&&(null!==Oe&&google.maps.event.removeListener(Oe),Be(google.maps.event.addListener(q,"position_changed",N)))}),[N]),l((()=>{q&&j&&(null!==_e&&google.maps.event.removeListener(_e),Te(google.maps.event.addListener(q,"shape_changed",j)))}),[j]),l((()=>{q&&H&&(null!==Ue&&google.maps.event.removeListener(Ue),ze(google.maps.event.addListener(q,"title_changed",H)))}),[H]),l((()=>{q&&G&&(null!==Re&&google.maps.event.removeListener(Re),Ae(google.maps.event.addListener(q,"visible_changed",G)))}),[G]),l((()=>{q&&$&&(null!==Ze&&google.maps.event.removeListener(Ze),Ve(google.maps.event.addListener(q,"zindex_changed",$)))}),[$]),l((()=>{const e={...s||ue,...i?ue:{map:Y},position:t},n=new google.maps.Marker(e);return i?i.addMarker(n,!!a):n.setMap(Y),t&&n.setPosition(t),void 0!==m&&n.setVisible(m),void 0!==d&&n.setDraggable(d),void 0!==f&&n.setClickable(f),"string"==typeof L&&n.setCursor(L),y&&n.setIcon(y),void 0!==b&&n.setLabel(b),void 0!==C&&n.setOpacity(C),x&&n.setShape(x),"string"==typeof k&&n.setTitle(k),"number"==typeof w&&n.setZIndex(w),E&&Q(google.maps.event.addListener(n,"dblclick",E)),I&&te(google.maps.event.addListener(n,"dragend",I)),D&&se(google.maps.event.addListener(n,"dragstart",D)),T&&ie(google.maps.event.addListener(n,"mousedown",T)),O&&ae(google.maps.event.addListener(n,"mouseout",O)),B&&pe(google.maps.event.addListener(n,"mouseover",B)),_&&he(google.maps.event.addListener(n,"mouseup",_)),U&&ce(google.maps.event.addListener(n,"rightclick",U)),P&&ve(google.maps.event.addListener(n,"click",P)),S&&Le(google.maps.event.addListener(n,"drag",S)),z&&be(google.maps.event.addListener(n,"clickable_changed",z)),R&&Ce(google.maps.event.addListener(n,"cursor_changed",R)),A&&ke(google.maps.event.addListener(n,"animation_changed",A)),Z&&Pe(google.maps.event.addListener(n,"draggable_changed",Z)),V&&Se(google.maps.event.addListener(n,"flat_changed",V)),W&&De(google.maps.event.addListener(n,"icon_changed",W)),N&&Be(google.maps.event.addListener(n,"position_changed",N)),j&&Te(google.maps.event.addListener(n,"shape_changed",j)),H&&ze(google.maps.event.addListener(n,"title_changed",H)),G&&Ae(google.maps.event.addListener(n,"visible_changed",G)),$&&Ve(google.maps.event.addListener(n,"zindex_changed",$)),J(n),F&&F(n),()=>{null!==X&&google.maps.event.removeListener(X),null!==ee&&google.maps.event.removeListener(ee),null!==ne&&google.maps.event.removeListener(ne),null!==oe&&google.maps.event.removeListener(oe),null!==re&&google.maps.event.removeListener(re),null!==le&&google.maps.event.removeListener(le),null!==de&&google.maps.event.removeListener(de),null!==ge&&google.maps.event.removeListener(ge),null!==me&&google.maps.event.removeListener(me),null!==ye&&google.maps.event.removeListener(ye),null!==Me&&google.maps.event.removeListener(Me),null!==xe&&google.maps.event.removeListener(xe),null!==we&&google.maps.event.removeListener(we),null!==Ee&&google.maps.event.removeListener(Ee),null!==Ie&&google.maps.event.removeListener(Ie),null!==Oe&&google.maps.event.removeListener(Oe),null!==Ue&&google.maps.event.removeListener(Ue),null!==Re&&google.maps.event.removeListener(Re),null!==Ze&&google.maps.event.removeListener(Ze),K&&K(n),i?i.removeMarker(n,!!a):n&&n.setMap(null)}}),[]);const We=h((()=>p?g.map(p,(e=>{if(!u(e))return e;return c(e,{anchor:q})})):null),[p,q]);return e(n,{children:We})||null}));class me extends p{static contextType=M;registeredEvents=[];marker;async componentDidMount(){const e={...this.props.options||ue,...this.props.clusterer?ue:{map:this.context},position:this.props.position};this.marker=new google.maps.Marker(e),this.props.clusterer?this.props.clusterer.addMarker(this.marker,!!this.props.noClustererRedraw):this.marker.setMap(this.context),this.registeredEvents=E({updaterMap:ge,eventMap:he,prevProps:{},nextProps:this.props,instance:this.marker}),this.props.onLoad&&this.props.onLoad(this.marker)}componentDidUpdate(e){this.marker&&(P(this.registeredEvents),this.registeredEvents=E({updaterMap:ge,eventMap:he,prevProps:e,nextProps:this.props,instance:this.marker}))}componentWillUnmount(){this.marker&&(this.props.onUnmount&&this.props.onUnmount(this.marker),P(this.registeredEvents),this.props.clusterer?this.props.clusterer.removeMarker(this.marker,!!this.props.noClustererRedraw):this.marker&&this.marker.setMap(null))}render(){return(this.props.children?g.map(this.props.children,(e=>{if(!u(e))return e;return c(e,{anchor:this.marker})})):null)||null}}var ve=function(){function e(t,n){t.getClusterer().extend(e,google.maps.OverlayView),this.cluster=t,this.clusterClassName=this.cluster.getClusterer().getClusterClass(),this.className=this.clusterClassName,this.styles=n,this.center=void 0,this.div=null,this.sums=null,this.visible=!1,this.boundsChangedListener=null,this.url="",this.height=0,this.width=0,this.anchorText=[0,0],this.anchorIcon=[0,0],this.textColor="black",this.textSize=11,this.textDecoration="none",this.fontWeight="bold",this.fontStyle="normal",this.fontFamily="Arial,sans-serif",this.backgroundPosition="0 0",this.cMouseDownInCluster=null,this.cDraggingMapByCluster=null,this.timeOut=null,this.setMap(t.getMap()),this.onBoundsChanged=this.onBoundsChanged.bind(this),this.onMouseDown=this.onMouseDown.bind(this),this.onClick=this.onClick.bind(this),this.onMouseOver=this.onMouseOver.bind(this),this.onMouseOut=this.onMouseOut.bind(this),this.onAdd=this.onAdd.bind(this),this.onRemove=this.onRemove.bind(this),this.draw=this.draw.bind(this),this.hide=this.hide.bind(this),this.show=this.show.bind(this),this.useStyle=this.useStyle.bind(this),this.setCenter=this.setCenter.bind(this),this.getPosFromLatLng=this.getPosFromLatLng.bind(this)}return e.prototype.onBoundsChanged=function(){this.cDraggingMapByCluster=this.cMouseDownInCluster},e.prototype.onMouseDown=function(){this.cMouseDownInCluster=!0,this.cDraggingMapByCluster=!1},e.prototype.onClick=function(e){if(this.cMouseDownInCluster=!1,!this.cDraggingMapByCluster){var t=this.cluster.getClusterer();if(google.maps.event.trigger(t,"click",this.cluster),google.maps.event.trigger(t,"clusterclick",this.cluster),t.getZoomOnClick()){var n=t.getMaxZoom(),s=this.cluster.getBounds(),o=t.getMap();null!==o&&"fitBounds"in o&&o.fitBounds(s),this.timeOut=window.setTimeout((function(){var e=t.getMap();if(null!==e){"fitBounds"in e&&e.fitBounds(s);var o=e.getZoom()||0;null!==n&&o>n&&e.setZoom(n+1)}}),100)}e.cancelBubble=!0,e.stopPropagation&&e.stopPropagation()}},e.prototype.onMouseOver=function(){google.maps.event.trigger(this.cluster.getClusterer(),"mouseover",this.cluster)},e.prototype.onMouseOut=function(){google.maps.event.trigger(this.cluster.getClusterer(),"mouseout",this.cluster)},e.prototype.onAdd=function(){var e;this.div=document.createElement("div"),this.div.className=this.className,this.visible&&this.show(),null===(e=this.getPanes())||void 0===e||e.overlayMouseTarget.appendChild(this.div);var t=this.getMap();null!==t&&(this.boundsChangedListener=google.maps.event.addListener(t,"bounds_changed",this.onBoundsChanged),this.div.addEventListener("mousedown",this.onMouseDown),this.div.addEventListener("click",this.onClick),this.div.addEventListener("mouseover",this.onMouseOver),this.div.addEventListener("mouseout",this.onMouseOut))},e.prototype.onRemove=function(){this.div&&this.div.parentNode&&(this.hide(),null!==this.boundsChangedListener&&google.maps.event.removeListener(this.boundsChangedListener),this.div.removeEventListener("mousedown",this.onMouseDown),this.div.removeEventListener("click",this.onClick),this.div.removeEventListener("mouseover",this.onMouseOver),this.div.removeEventListener("mouseout",this.onMouseOut),this.div.parentNode.removeChild(this.div),null!==this.timeOut&&(window.clearTimeout(this.timeOut),this.timeOut=null),this.div=null)},e.prototype.draw=function(){if(this.visible&&null!==this.div&&this.center){var e=this.getPosFromLatLng(this.center);this.div.style.top=null!==e?"".concat(e.y,"px"):"0",this.div.style.left=null!==e?"".concat(e.x,"px"):"0"}},e.prototype.hide=function(){this.div&&(this.div.style.display="none"),this.visible=!1},e.prototype.show=function(){var e,t,n,s,o,i;if(this.div&&this.center){var r=null===this.sums||void 0===this.sums.title||""===this.sums.title?this.cluster.getClusterer().getTitle():this.sums.title,a=this.backgroundPosition.split(" "),l=parseInt((null===(e=a[0])||void 0===e?void 0:e.replace(/^\s+|\s+$/g,""))||"0",10),p=parseInt((null===(t=a[1])||void 0===t?void 0:t.replace(/^\s+|\s+$/g,""))||"0",10),d=this.getPosFromLatLng(this.center);this.div.className=this.className,this.div.setAttribute("style","cursor: pointer; position: absolute; top: ".concat(null!==d?"".concat(d.y,"px"):"0","; left: ").concat(null!==d?"".concat(d.x,"px"):"0","; width: ").concat(this.width,"px; height: ").concat(this.height,"px; "));var h=document.createElement("img");h.alt=r,h.src=this.url,h.width=this.width,h.height=this.height,h.setAttribute("style","position: absolute; top: ".concat(p,"px; left: ").concat(l,"px")),this.cluster.getClusterer().enableRetinaIcons||(h.style.clip="rect(-".concat(p,"px, -").concat(l+this.width,"px, -").concat(p+this.height,", -").concat(l,")"));var g=document.createElement("div");g.setAttribute("style","position: absolute; top: ".concat(this.anchorText[0],"px; left: ").concat(this.anchorText[1],"px; color: ").concat(this.textColor,"; font-size: ").concat(this.textSize,"px; font-family: ").concat(this.fontFamily,"; font-weight: ").concat(this.fontWeight,"; fontStyle: ").concat(this.fontStyle,"; text-decoration: ").concat(this.textDecoration,"; text-align: center; width: ").concat(this.width,"px; line-height: ").concat(this.height,"px")),(null===(n=this.sums)||void 0===n?void 0:n.text)&&(g.innerText="".concat(null===(s=this.sums)||void 0===s?void 0:s.text)),(null===(o=this.sums)||void 0===o?void 0:o.html)&&(g.innerHTML="".concat(null===(i=this.sums)||void 0===i?void 0:i.html)),this.div.innerHTML="",this.div.appendChild(h),this.div.appendChild(g),this.div.title=r,this.div.style.display=""}this.visible=!0},e.prototype.useStyle=function(e){this.sums=e;var t=this.cluster.getClusterer().getStyles(),n=t[Math.min(t.length-1,Math.max(0,e.index-1))];n&&(this.url=n.url,this.height=n.height,this.width=n.width,n.className&&(this.className="".concat(this.clusterClassName," ").concat(n.className)),this.anchorText=n.anchorText||[0,0],this.anchorIcon=n.anchorIcon||[this.height/2,this.width/2],this.textColor=n.textColor||"black",this.textSize=n.textSize||11,this.textDecoration=n.textDecoration||"none",this.fontWeight=n.fontWeight||"bold",this.fontStyle=n.fontStyle||"normal",this.fontFamily=n.fontFamily||"Arial,sans-serif",this.backgroundPosition=n.backgroundPosition||"0 0")},e.prototype.setCenter=function(e){this.center=e},e.prototype.getPosFromLatLng=function(e){var t=this.getProjection().fromLatLngToDivPixel(e);return null!==t&&(t.x-=this.anchorIcon[1],t.y-=this.anchorIcon[0]),t},e}(),fe=function(){function e(e){this.markerClusterer=e,this.map=this.markerClusterer.getMap(),this.gridSize=this.markerClusterer.getGridSize(),this.minClusterSize=this.markerClusterer.getMinimumClusterSize(),this.averageCenter=this.markerClusterer.getAverageCenter(),this.markers=[],this.center=void 0,this.bounds=null,this.clusterIcon=new ve(this,this.markerClusterer.getStyles()),this.getSize=this.getSize.bind(this),this.getMarkers=this.getMarkers.bind(this),this.getCenter=this.getCenter.bind(this),this.getMap=this.getMap.bind(this),this.getClusterer=this.getClusterer.bind(this),this.getBounds=this.getBounds.bind(this),this.remove=this.remove.bind(this),this.addMarker=this.addMarker.bind(this),this.isMarkerInClusterBounds=this.isMarkerInClusterBounds.bind(this),this.calculateBounds=this.calculateBounds.bind(this),this.updateIcon=this.updateIcon.bind(this),this.isMarkerAlreadyAdded=this.isMarkerAlreadyAdded.bind(this)}return e.prototype.getSize=function(){return this.markers.length},e.prototype.getMarkers=function(){return this.markers},e.prototype.getCenter=function(){return this.center},e.prototype.getMap=function(){return this.map},e.prototype.getClusterer=function(){return this.markerClusterer},e.prototype.getBounds=function(){for(var e=new google.maps.LatLngBounds(this.center,this.center),t=0,n=this.getMarkers();t<n.length;t++){var s=n[t].getPosition();s&&e.extend(s)}return e},e.prototype.remove=function(){this.clusterIcon.setMap(null),this.markers=[],delete this.markers},e.prototype.addMarker=function(e){var t,n;if(this.isMarkerAlreadyAdded(e))return!1;if(this.center){if(this.averageCenter&&(n=e.getPosition())){var s=this.markers.length+1;this.center=new google.maps.LatLng((this.center.lat()*(s-1)+n.lat())/s,(this.center.lng()*(s-1)+n.lng())/s),this.calculateBounds()}}else(n=e.getPosition())&&(this.center=n,this.calculateBounds());e.isAdded=!0,this.markers.push(e);var o=this.markers.length,i=this.markerClusterer.getMaxZoom(),r=null===(t=this.map)||void 0===t?void 0:t.getZoom();if(null!==i&&void 0!==r&&r>i)e.getMap()!==this.map&&e.setMap(this.map);else if(o<this.minClusterSize)e.getMap()!==this.map&&e.setMap(this.map);else if(o===this.minClusterSize)for(var a=0,l=this.markers;a<l.length;a++){l[a].setMap(null)}else e.setMap(null);return!0},e.prototype.isMarkerInClusterBounds=function(e){if(null!==this.bounds){var t=e.getPosition();if(t)return this.bounds.contains(t)}return!1},e.prototype.calculateBounds=function(){this.bounds=this.markerClusterer.getExtendedBounds(new google.maps.LatLngBounds(this.center,this.center))},e.prototype.updateIcon=function(){var e,t=this.markers.length,n=this.markerClusterer.getMaxZoom(),s=null===(e=this.map)||void 0===e?void 0:e.getZoom();null!==n&&void 0!==s&&s>n||t<this.minClusterSize?this.clusterIcon.hide():(this.center&&this.clusterIcon.setCenter(this.center),this.clusterIcon.useStyle(this.markerClusterer.getCalculator()(this.markers,this.markerClusterer.getStyles().length)),this.clusterIcon.show())},e.prototype.isMarkerAlreadyAdded=function(e){if(this.markers.includes)return this.markers.includes(e);for(var t=0;t<this.markers.length;t++)if(e===this.markers[t])return!0;return!1},e}();function Le(e,t){var n=e.length,s=n.toString().length,o=Math.min(s,t);return{text:n.toString(),index:o,title:""}}var ye=[53,56,66,78,90],be=function(){function e(t,n,s){void 0===n&&(n=[]),void 0===s&&(s={}),this.getMinimumClusterSize=this.getMinimumClusterSize.bind(this),this.setMinimumClusterSize=this.setMinimumClusterSize.bind(this),this.getEnableRetinaIcons=this.getEnableRetinaIcons.bind(this),this.setEnableRetinaIcons=this.setEnableRetinaIcons.bind(this),this.addToClosestCluster=this.addToClosestCluster.bind(this),this.getImageExtension=this.getImageExtension.bind(this),this.setImageExtension=this.setImageExtension.bind(this),this.getExtendedBounds=this.getExtendedBounds.bind(this),this.getAverageCenter=this.getAverageCenter.bind(this),this.setAverageCenter=this.setAverageCenter.bind(this),this.getTotalClusters=this.getTotalClusters.bind(this),this.fitMapToMarkers=this.fitMapToMarkers.bind(this),this.getIgnoreHidden=this.getIgnoreHidden.bind(this),this.setIgnoreHidden=this.setIgnoreHidden.bind(this),this.getClusterClass=this.getClusterClass.bind(this),this.setClusterClass=this.setClusterClass.bind(this),this.getTotalMarkers=this.getTotalMarkers.bind(this),this.getZoomOnClick=this.getZoomOnClick.bind(this),this.setZoomOnClick=this.setZoomOnClick.bind(this),this.getBatchSizeIE=this.getBatchSizeIE.bind(this),this.setBatchSizeIE=this.setBatchSizeIE.bind(this),this.createClusters=this.createClusters.bind(this),this.onZoomChanged=this.onZoomChanged.bind(this),this.getImageSizes=this.getImageSizes.bind(this),this.setImageSizes=this.setImageSizes.bind(this),this.getCalculator=this.getCalculator.bind(this),this.setCalculator=this.setCalculator.bind(this),this.removeMarkers=this.removeMarkers.bind(this),this.resetViewport=this.resetViewport.bind(this),this.getImagePath=this.getImagePath.bind(this),this.setImagePath=this.setImagePath.bind(this),this.pushMarkerTo=this.pushMarkerTo.bind(this),this.removeMarker=this.removeMarker.bind(this),this.clearMarkers=this.clearMarkers.bind(this),this.setupStyles=this.setupStyles.bind(this),this.getGridSize=this.getGridSize.bind(this),this.setGridSize=this.setGridSize.bind(this),this.getClusters=this.getClusters.bind(this),this.getMaxZoom=this.getMaxZoom.bind(this),this.setMaxZoom=this.setMaxZoom.bind(this),this.getMarkers=this.getMarkers.bind(this),this.addMarkers=this.addMarkers.bind(this),this.getStyles=this.getStyles.bind(this),this.setStyles=this.setStyles.bind(this),this.addMarker=this.addMarker.bind(this),this.onRemove=this.onRemove.bind(this),this.getTitle=this.getTitle.bind(this),this.setTitle=this.setTitle.bind(this),this.repaint=this.repaint.bind(this),this.onIdle=this.onIdle.bind(this),this.redraw=this.redraw.bind(this),this.onAdd=this.onAdd.bind(this),this.draw=this.draw.bind(this),this.extend=this.extend.bind(this),this.extend(e,google.maps.OverlayView),this.markers=[],this.clusters=[],this.listeners=[],this.activeMap=null,this.ready=!1,this.gridSize=s.gridSize||60,this.minClusterSize=s.minimumClusterSize||2,this.maxZoom=s.maxZoom||null,this.styles=s.styles||[],this.title=s.title||"",this.zoomOnClick=!0,void 0!==s.zoomOnClick&&(this.zoomOnClick=s.zoomOnClick),this.averageCenter=!1,void 0!==s.averageCenter&&(this.averageCenter=s.averageCenter),this.ignoreHidden=!1,void 0!==s.ignoreHidden&&(this.ignoreHidden=s.ignoreHidden),this.enableRetinaIcons=!1,void 0!==s.enableRetinaIcons&&(this.enableRetinaIcons=s.enableRetinaIcons),this.imagePath=s.imagePath||"https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m",this.imageExtension=s.imageExtension||"png",this.imageSizes=s.imageSizes||ye,this.calculator=s.calculator||Le,this.batchSize=s.batchSize||2e3,this.batchSizeIE=s.batchSizeIE||500,this.clusterClass=s.clusterClass||"cluster",-1!==navigator.userAgent.toLowerCase().indexOf("msie")&&(this.batchSize=this.batchSizeIE),this.timerRefStatic=null,this.setupStyles(),this.addMarkers(n,!0),this.setMap(t)}return e.prototype.onZoomChanged=function(){var e,t;this.resetViewport(!1),(null===(e=this.getMap())||void 0===e?void 0:e.getZoom())!==(this.get("minZoom")||0)&&(null===(t=this.getMap())||void 0===t?void 0:t.getZoom())!==this.get("maxZoom")||google.maps.event.trigger(this,"idle")},e.prototype.onIdle=function(){this.redraw()},e.prototype.onAdd=function(){var e=this.getMap();this.activeMap=e,this.ready=!0,this.repaint(),null!==e&&(this.listeners=[google.maps.event.addListener(e,"zoom_changed",this.onZoomChanged),google.maps.event.addListener(e,"idle",this.onIdle)])},e.prototype.onRemove=function(){for(var e=0,t=this.markers;e<t.length;e++){var n=t[e];n.getMap()!==this.activeMap&&n.setMap(this.activeMap)}for(var s=0,o=this.clusters;s<o.length;s++){o[s].remove()}this.clusters=[];for(var i=0,r=this.listeners;i<r.length;i++){var a=r[i];google.maps.event.removeListener(a)}this.listeners=[],this.activeMap=null,this.ready=!1},e.prototype.draw=function(){},e.prototype.getMap=function(){return null},e.prototype.getPanes=function(){return null},e.prototype.getProjection=function(){return{fromContainerPixelToLatLng:function(){return null},fromDivPixelToLatLng:function(){return null},fromLatLngToContainerPixel:function(){return null},fromLatLngToDivPixel:function(){return null},getVisibleRegion:function(){return null},getWorldWidth:function(){return 0}}},e.prototype.setMap=function(){},e.prototype.addListener=function(){return{remove:function(){}}},e.prototype.bindTo=function(){},e.prototype.get=function(){},e.prototype.notify=function(){},e.prototype.set=function(){},e.prototype.setValues=function(){},e.prototype.unbind=function(){},e.prototype.unbindAll=function(){},e.prototype.setupStyles=function(){if(!(this.styles.length>0))for(var e=0;e<this.imageSizes.length;e++)this.styles.push({url:"".concat(this.imagePath+(e+1),".").concat(this.imageExtension),height:this.imageSizes[e]||0,width:this.imageSizes[e]||0})},e.prototype.fitMapToMarkers=function(){for(var e=this.getMarkers(),t=new google.maps.LatLngBounds,n=0,s=e;n<s.length;n++){var o=s[n].getPosition();o&&t.extend(o)}var i=this.getMap();null!==i&&"fitBounds"in i&&i.fitBounds(t)},e.prototype.getGridSize=function(){return this.gridSize},e.prototype.setGridSize=function(e){this.gridSize=e},e.prototype.getMinimumClusterSize=function(){return this.minClusterSize},e.prototype.setMinimumClusterSize=function(e){this.minClusterSize=e},e.prototype.getMaxZoom=function(){return this.maxZoom},e.prototype.setMaxZoom=function(e){this.maxZoom=e},e.prototype.getStyles=function(){return this.styles},e.prototype.setStyles=function(e){this.styles=e},e.prototype.getTitle=function(){return this.title},e.prototype.setTitle=function(e){this.title=e},e.prototype.getZoomOnClick=function(){return this.zoomOnClick},e.prototype.setZoomOnClick=function(e){this.zoomOnClick=e},e.prototype.getAverageCenter=function(){return this.averageCenter},e.prototype.setAverageCenter=function(e){this.averageCenter=e},e.prototype.getIgnoreHidden=function(){return this.ignoreHidden},e.prototype.setIgnoreHidden=function(e){this.ignoreHidden=e},e.prototype.getEnableRetinaIcons=function(){return this.enableRetinaIcons},e.prototype.setEnableRetinaIcons=function(e){this.enableRetinaIcons=e},e.prototype.getImageExtension=function(){return this.imageExtension},e.prototype.setImageExtension=function(e){this.imageExtension=e},e.prototype.getImagePath=function(){return this.imagePath},e.prototype.setImagePath=function(e){this.imagePath=e},e.prototype.getImageSizes=function(){return this.imageSizes},e.prototype.setImageSizes=function(e){this.imageSizes=e},e.prototype.getCalculator=function(){return this.calculator},e.prototype.setCalculator=function(e){this.calculator=e},e.prototype.getBatchSizeIE=function(){return this.batchSizeIE},e.prototype.setBatchSizeIE=function(e){this.batchSizeIE=e},e.prototype.getClusterClass=function(){return this.clusterClass},e.prototype.setClusterClass=function(e){this.clusterClass=e},e.prototype.getMarkers=function(){return this.markers},e.prototype.getTotalMarkers=function(){return this.markers.length},e.prototype.getClusters=function(){return this.clusters},e.prototype.getTotalClusters=function(){return this.clusters.length},e.prototype.addMarker=function(e,t){this.pushMarkerTo(e),t||this.redraw()},e.prototype.addMarkers=function(e,t){for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){var s=e[n];s&&this.pushMarkerTo(s)}t||this.redraw()},e.prototype.pushMarkerTo=function(e){var t=this;e.getDraggable()&&google.maps.event.addListener(e,"dragend",(function(){t.ready&&(e.isAdded=!1,t.repaint())})),e.isAdded=!1,this.markers.push(e)},e.prototype.removeMarker_=function(e){var t=-1;if(this.markers.indexOf)t=this.markers.indexOf(e);else for(var n=0;n<this.markers.length;n++)if(e===this.markers[n]){t=n;break}return-1!==t&&(e.setMap(null),this.markers.splice(t,1),!0)},e.prototype.removeMarker=function(e,t){var n=this.removeMarker_(e);return!t&&n&&this.repaint(),n},e.prototype.removeMarkers=function(e,t){for(var n=!1,s=0,o=e;s<o.length;s++){var i=o[s];n=n||this.removeMarker_(i)}return!t&&n&&this.repaint(),n},e.prototype.clearMarkers=function(){this.resetViewport(!0),this.markers=[]},e.prototype.repaint=function(){var e=this.clusters.slice();this.clusters=[],this.resetViewport(!1),this.redraw(),setTimeout((function(){for(var t=0,n=e;t<n.length;t++){n[t].remove()}}),0)},e.prototype.getExtendedBounds=function(e){var t=this.getProjection(),n=t.fromLatLngToDivPixel(new google.maps.LatLng(e.getNorthEast().lat(),e.getNorthEast().lng()));null!==n&&(n.x+=this.gridSize,n.y-=this.gridSize);var s=t.fromLatLngToDivPixel(new google.maps.LatLng(e.getSouthWest().lat(),e.getSouthWest().lng()));if(null!==s&&(s.x-=this.gridSize,s.y+=this.gridSize),null!==n){var o=t.fromDivPixelToLatLng(n);null!==o&&e.extend(o)}if(null!==s){var i=t.fromDivPixelToLatLng(s);null!==i&&e.extend(i)}return e},e.prototype.redraw=function(){this.createClusters(0)},e.prototype.resetViewport=function(e){for(var t=0,n=this.clusters;t<n.length;t++){n[t].remove()}this.clusters=[];for(var s=0,o=this.markers;s<o.length;s++){var i=o[s];i.isAdded=!1,e&&i.setMap(null)}},e.prototype.distanceBetweenPoints=function(e,t){var n=(t.lat()-e.lat())*Math.PI/180,s=(t.lng()-e.lng())*Math.PI/180,o=Math.sin(n/2)*Math.sin(n/2)+Math.cos(e.lat()*Math.PI/180)*Math.cos(t.lat()*Math.PI/180)*Math.sin(s/2)*Math.sin(s/2);return 2*Math.atan2(Math.sqrt(o),Math.sqrt(1-o))*6371},e.prototype.isMarkerInBounds=function(e,t){var n=e.getPosition();return!!n&&t.contains(n)},e.prototype.addToClosestCluster=function(e){for(var t,n=4e4,s=null,o=0,i=this.clusters;o<i.length;o++){var r=(t=i[o]).getCenter(),a=e.getPosition();if(r&&a){var l=this.distanceBetweenPoints(r,a);l<n&&(n=l,s=t)}}s&&s.isMarkerInClusterBounds(e)?s.addMarker(e):((t=new fe(this)).addMarker(e),this.clusters.push(t))},e.prototype.createClusters=function(e){var t=this;if(this.ready){0===e&&(google.maps.event.trigger(this,"clusteringbegin",this),null!==this.timerRefStatic&&(window.clearTimeout(this.timerRefStatic),delete this.timerRefStatic));for(var n=this.getMap(),s=(null!==n&&"getBounds"in n?n.getBounds():null),o=((null==n?void 0:n.getZoom())||0)>3?new google.maps.LatLngBounds(null==s?void 0:s.getSouthWest(),null==s?void 0:s.getNorthEast()):new google.maps.LatLngBounds(new google.maps.LatLng(85.02070771743472,-178.48388434375),new google.maps.LatLng(-85.08136444384544,178.00048865625)),i=this.getExtendedBounds(o),r=Math.min(e+this.batchSize,this.markers.length),a=e;a<r;a++){var l=this.markers[a];l&&!l.isAdded&&this.isMarkerInBounds(l,i)&&(!this.ignoreHidden||this.ignoreHidden&&l.getVisible())&&this.addToClosestCluster(l)}if(r<this.markers.length)this.timerRefStatic=window.setTimeout((function(){t.createClusters(r)}),0);else{this.timerRefStatic=null,google.maps.event.trigger(this,"clusteringend",this);for(var p=0,d=this.clusters;p<d.length;p++){d[p].updateIcon()}}}},e.prototype.extend=function(e,t){return function(e){for(var t in e.prototype){var n=t;this.prototype[n]=e.prototype[n]}return this}.apply(e,[t])},e}();const Me={onClick:"click",onClusteringBegin:"clusteringbegin",onClusteringEnd:"clusteringend",onMouseOut:"mouseout",onMouseOver:"mouseover"},Ce={averageCenter(e,t){e.setAverageCenter(t)},batchSizeIE(e,t){e.setBatchSizeIE(t)},calculator(e,t){e.setCalculator(t)},clusterClass(e,t){e.setClusterClass(t)},enableRetinaIcons(e,t){e.setEnableRetinaIcons(t)},gridSize(e,t){e.setGridSize(t)},ignoreHidden(e,t){e.setIgnoreHidden(t)},imageExtension(e,t){e.setImageExtension(t)},imagePath(e,t){e.setImagePath(t)},imageSizes(e,t){e.setImageSizes(t)},maxZoom(e,t){e.setMaxZoom(t)},minimumClusterSize(e,t){e.setMinimumClusterSize(t)},styles(e,t){e.setStyles(t)},title(e,t){e.setTitle(t)},zoomOnClick(e,t){e.setZoomOnClick(t)}},xe={};const ke=i((function(e){const{children:t,options:n,averageCenter:s,batchSizeIE:i,calculator:a,clusterClass:p,enableRetinaIcons:d,gridSize:h,ignoreHidden:g,imageExtension:u,imagePath:c,imageSizes:m,maxZoom:v,minimumClusterSize:f,styles:L,title:y,zoomOnClick:b,onClick:C,onClusteringBegin:x,onClusteringEnd:k,onMouseOver:w,onMouseOut:P,onLoad:E,onUnmount:S}=e,[I,D]=r(null),O=o(M),[B,_]=r(null),[T,U]=r(null),[z,R]=r(null),[A,Z]=r(null),[V,W]=r(null);return l((()=>{I&&P&&(null!==A&&google.maps.event.removeListener(A),Z(google.maps.event.addListener(I,Me.onMouseOut,P)))}),[P]),l((()=>{I&&w&&(null!==V&&google.maps.event.removeListener(V),W(google.maps.event.addListener(I,Me.onMouseOver,w)))}),[w]),l((()=>{I&&C&&(null!==B&&google.maps.event.removeListener(B),_(google.maps.event.addListener(I,Me.onClick,C)))}),[C]),l((()=>{I&&x&&(null!==T&&google.maps.event.removeListener(T),U(google.maps.event.addListener(I,Me.onClusteringBegin,x)))}),[x]),l((()=>{I&&k&&(null!==z&&google.maps.event.removeListener(z),U(google.maps.event.addListener(I,Me.onClusteringEnd,k)))}),[k]),l((()=>{void 0!==s&&null!==I&&Ce.averageCenter(I,s)}),[I,s]),l((()=>{void 0!==i&&null!==I&&Ce.batchSizeIE(I,i)}),[I,i]),l((()=>{void 0!==a&&null!==I&&Ce.calculator(I,a)}),[I,a]),l((()=>{void 0!==p&&null!==I&&Ce.clusterClass(I,p)}),[I,p]),l((()=>{void 0!==d&&null!==I&&Ce.enableRetinaIcons(I,d)}),[I,d]),l((()=>{void 0!==h&&null!==I&&Ce.gridSize(I,h)}),[I,h]),l((()=>{void 0!==g&&null!==I&&Ce.ignoreHidden(I,g)}),[I,g]),l((()=>{void 0!==u&&null!==I&&Ce.imageExtension(I,u)}),[I,u]),l((()=>{void 0!==c&&null!==I&&Ce.imagePath(I,c)}),[I,c]),l((()=>{void 0!==m&&null!==I&&Ce.imageSizes(I,m)}),[I,m]),l((()=>{void 0!==v&&null!==I&&Ce.maxZoom(I,v)}),[I,v]),l((()=>{void 0!==f&&null!==I&&Ce.minimumClusterSize(I,f)}),[I,f]),l((()=>{void 0!==L&&null!==I&&Ce.styles(I,L)}),[I,L]),l((()=>{void 0!==y&&null!==I&&Ce.title(I,y)}),[I,y]),l((()=>{void 0!==b&&null!==I&&Ce.zoomOnClick(I,b)}),[I,b]),l((()=>{if(!O)return;const e={...n||xe},t=new be(O,[],e);return s&&Ce.averageCenter(t,s),i&&Ce.batchSizeIE(t,i),a&&Ce.calculator(t,a),p&&Ce.clusterClass(t,p),d&&Ce.enableRetinaIcons(t,d),h&&Ce.gridSize(t,h),g&&Ce.ignoreHidden(t,g),u&&Ce.imageExtension(t,u),c&&Ce.imagePath(t,c),m&&Ce.imageSizes(t,m),v&&Ce.maxZoom(t,v),f&&Ce.minimumClusterSize(t,f),L&&Ce.styles(t,L),y&&Ce.title(t,y),b&&Ce.zoomOnClick(t,b),P&&Z(google.maps.event.addListener(t,Me.onMouseOut,P)),w&&W(google.maps.event.addListener(t,Me.onMouseOver,w)),C&&_(google.maps.event.addListener(t,Me.onClick,C)),x&&U(google.maps.event.addListener(t,Me.onClusteringBegin,x)),k&&R(google.maps.event.addListener(t,Me.onClusteringEnd,k)),D(t),E&&E(t),()=>{null!==A&&google.maps.event.removeListener(A),null!==V&&google.maps.event.removeListener(V),null!==B&&google.maps.event.removeListener(B),null!==T&&google.maps.event.removeListener(T),null!==z&&google.maps.event.removeListener(z),S&&S(t)}}),[]),null!==I&&t(I)||null}));class we extends p{static contextType=M;registeredEvents=[];state={markerClusterer:null};setClustererCallback=()=>{null!==this.state.markerClusterer&&this.props.onLoad&&this.props.onLoad(this.state.markerClusterer)};componentDidMount(){if(this.context){const e=new be(this.context,[],this.props.options);this.registeredEvents=E({updaterMap:Ce,eventMap:Me,prevProps:{},nextProps:this.props,instance:e}),this.setState((()=>({markerClusterer:e})),this.setClustererCallback)}}componentDidUpdate(e){this.state.markerClusterer&&(P(this.registeredEvents),this.registeredEvents=E({updaterMap:Ce,eventMap:Me,prevProps:e,nextProps:this.props,instance:this.state.markerClusterer}))}componentWillUnmount(){null!==this.state.markerClusterer&&(this.props.onUnmount&&this.props.onUnmount(this.state.markerClusterer),P(this.registeredEvents),this.state.markerClusterer.setMap(null))}render(){return null!==this.state.markerClusterer?this.props.children(this.state.markerClusterer):null}}function Pe(e){e.cancelBubble=!0,e.stopPropagation&&e.stopPropagation()}var Ee=function(){function e(t){void 0===t&&(t={}),this.getCloseClickHandler=this.getCloseClickHandler.bind(this),this.closeClickHandler=this.closeClickHandler.bind(this),this.createInfoBoxDiv=this.createInfoBoxDiv.bind(this),this.addClickHandler=this.addClickHandler.bind(this),this.getCloseBoxImg=this.getCloseBoxImg.bind(this),this.getBoxWidths=this.getBoxWidths.bind(this),this.setBoxStyle=this.setBoxStyle.bind(this),this.setPosition=this.setPosition.bind(this),this.getPosition=this.getPosition.bind(this),this.setOptions=this.setOptions.bind(this),this.setContent=this.setContent.bind(this),this.setVisible=this.setVisible.bind(this),this.getContent=this.getContent.bind(this),this.getVisible=this.getVisible.bind(this),this.setZIndex=this.setZIndex.bind(this),this.getZIndex=this.getZIndex.bind(this),this.onRemove=this.onRemove.bind(this),this.panBox=this.panBox.bind(this),this.extend=this.extend.bind(this),this.close=this.close.bind(this),this.draw=this.draw.bind(this),this.show=this.show.bind(this),this.hide=this.hide.bind(this),this.open=this.open.bind(this),this.extend(e,google.maps.OverlayView),this.content=t.content||"",this.disableAutoPan=t.disableAutoPan||!1,this.maxWidth=t.maxWidth||0,this.pixelOffset=t.pixelOffset||new google.maps.Size(0,0),this.position=t.position||new google.maps.LatLng(0,0),this.zIndex=t.zIndex||null,this.boxClass=t.boxClass||"infoBox",this.boxStyle=t.boxStyle||{},this.closeBoxMargin=t.closeBoxMargin||"2px",this.closeBoxURL=t.closeBoxURL||"http://www.google.com/intl/en_us/mapfiles/close.gif",""===t.closeBoxURL&&(this.closeBoxURL=""),this.infoBoxClearance=t.infoBoxClearance||new google.maps.Size(1,1),void 0===t.visible&&(void 0===t.isHidden?t.visible=!0:t.visible=!t.isHidden),this.isHidden=!t.visible,this.alignBottom=t.alignBottom||!1,this.pane=t.pane||"floatPane",this.enableEventPropagation=t.enableEventPropagation||!1,this.div=null,this.closeListener=null,this.moveListener=null,this.mapListener=null,this.contextListener=null,this.eventListeners=null,this.fixedWidthSet=null}return e.prototype.createInfoBoxDiv=function(){var e=this;if(!this.div){this.div=document.createElement("div"),this.setBoxStyle(),"string"==typeof this.content?this.div.innerHTML=this.getCloseBoxImg()+this.content:(this.div.innerHTML=this.getCloseBoxImg(),this.div.appendChild(this.content));var t=this.getPanes();if(null!==t&&t[this.pane].appendChild(this.div),this.addClickHandler(),this.div.style.width)this.fixedWidthSet=!0;else if(0!==this.maxWidth&&this.div.offsetWidth>this.maxWidth)this.div.style.width=this.maxWidth+"px",this.fixedWidthSet=!0;else{var n=this.getBoxWidths();this.div.style.width=this.div.offsetWidth-n.left-n.right+"px",this.fixedWidthSet=!1}if(this.panBox(this.disableAutoPan),!this.enableEventPropagation){this.eventListeners=[];for(var s=0,o=["mousedown","mouseover","mouseout","mouseup","click","dblclick","touchstart","touchend","touchmove"];s<o.length;s++){var i=o[s];this.eventListeners.push(google.maps.event.addListener(this.div,i,Pe))}this.eventListeners.push(google.maps.event.addListener(this.div,"mouseover",(function(){e.div&&(e.div.style.cursor="default")})))}this.contextListener=google.maps.event.addListener(this.div,"contextmenu",(function(t){t.returnValue=!1,t.preventDefault&&t.preventDefault(),e.enableEventPropagation||Pe(t)})),google.maps.event.trigger(this,"domready")}},e.prototype.getCloseBoxImg=function(){var e="";return""!==this.closeBoxURL&&(e='<img alt=""',e+=' aria-hidden="true"',e+=" src='"+this.closeBoxURL+"'",e+=" align=right",e+=" style='",e+=" position: relative;",e+=" cursor: pointer;",e+=" margin: "+this.closeBoxMargin+";",e+="'>"),e},e.prototype.addClickHandler=function(){this.closeListener=this.div&&this.div.firstChild&&""!==this.closeBoxURL?google.maps.event.addListener(this.div.firstChild,"click",this.getCloseClickHandler()):null},e.prototype.closeClickHandler=function(e){e.cancelBubble=!0,e.stopPropagation&&e.stopPropagation(),google.maps.event.trigger(this,"closeclick"),this.close()},e.prototype.getCloseClickHandler=function(){return this.closeClickHandler},e.prototype.panBox=function(e){if(this.div&&!e){var t=this.getMap();if(t instanceof google.maps.Map){var n=0,s=0,o=t.getBounds();o&&!o.contains(this.position)&&t.setCenter(this.position);var i=t.getDiv(),r=i.offsetWidth,a=i.offsetHeight,l=this.pixelOffset.width,p=this.pixelOffset.height,d=this.div.offsetWidth,h=this.div.offsetHeight,g=this.infoBoxClearance.width,u=this.infoBoxClearance.height,c=this.getProjection().fromLatLngToContainerPixel(this.position);null!==c&&(c.x<-l+g?n=c.x+l-g:c.x+d+l+g>r&&(n=c.x+d+l+g-r),this.alignBottom?c.y<-p+u+h?s=c.y+p-u-h:c.y+p+u>a&&(s=c.y+p+u-a):c.y<-p+u?s=c.y+p-u:c.y+h+p+u>a&&(s=c.y+h+p+u-a)),0===n&&0===s||t.panBy(n,s)}}},e.prototype.setBoxStyle=function(){if(this.div){this.div.className=this.boxClass,this.div.style.cssText="";var e=this.boxStyle;for(var t in e)Object.prototype.hasOwnProperty.call(e,t)&&(this.div.style[t]=e[t]);if(this.div.style.webkitTransform="translateZ(0)",void 0!==this.div.style.opacity&&""!==this.div.style.opacity){var n=parseFloat(this.div.style.opacity||"");this.div.style.msFilter='"progid:DXImageTransform.Microsoft.Alpha(Opacity='+100*n+')"',this.div.style.filter="alpha(opacity="+100*n+")"}this.div.style.position="absolute",this.div.style.visibility="hidden",null!==this.zIndex&&(this.div.style.zIndex=this.zIndex+""),this.div.style.overflow||(this.div.style.overflow="auto")}},e.prototype.getBoxWidths=function(){var e={top:0,bottom:0,left:0,right:0};if(!this.div)return e;if(document.defaultView){var t=this.div.ownerDocument,n=t&&t.defaultView?t.defaultView.getComputedStyle(this.div,""):null;n&&(e.top=parseInt(n.borderTopWidth||"",10)||0,e.bottom=parseInt(n.borderBottomWidth||"",10)||0,e.left=parseInt(n.borderLeftWidth||"",10)||0,e.right=parseInt(n.borderRightWidth||"",10)||0)}else if(document.documentElement.currentStyle){var s=this.div.currentStyle;s&&(e.top=parseInt(s.borderTopWidth||"",10)||0,e.bottom=parseInt(s.borderBottomWidth||"",10)||0,e.left=parseInt(s.borderLeftWidth||"",10)||0,e.right=parseInt(s.borderRightWidth||"",10)||0)}return e},e.prototype.onRemove=function(){this.div&&this.div.parentNode&&(this.div.parentNode.removeChild(this.div),this.div=null)},e.prototype.draw=function(){if(this.createInfoBoxDiv(),this.div){var e=this.getProjection().fromLatLngToDivPixel(this.position);null!==e&&(this.div.style.left=e.x+this.pixelOffset.width+"px",this.alignBottom?this.div.style.bottom=-(e.y+this.pixelOffset.height)+"px":this.div.style.top=e.y+this.pixelOffset.height+"px"),this.isHidden?this.div.style.visibility="hidden":this.div.style.visibility="visible"}},e.prototype.setOptions=function(e){void 0===e&&(e={}),void 0!==e.boxClass&&(this.boxClass=e.boxClass,this.setBoxStyle()),void 0!==e.boxStyle&&(this.boxStyle=e.boxStyle,this.setBoxStyle()),void 0!==e.content&&this.setContent(e.content),void 0!==e.disableAutoPan&&(this.disableAutoPan=e.disableAutoPan),void 0!==e.maxWidth&&(this.maxWidth=e.maxWidth),void 0!==e.pixelOffset&&(this.pixelOffset=e.pixelOffset),void 0!==e.alignBottom&&(this.alignBottom=e.alignBottom),void 0!==e.position&&this.setPosition(e.position),void 0!==e.zIndex&&this.setZIndex(e.zIndex),void 0!==e.closeBoxMargin&&(this.closeBoxMargin=e.closeBoxMargin),void 0!==e.closeBoxURL&&(this.closeBoxURL=e.closeBoxURL),void 0!==e.infoBoxClearance&&(this.infoBoxClearance=e.infoBoxClearance),void 0!==e.isHidden&&(this.isHidden=e.isHidden),void 0!==e.visible&&(this.isHidden=!e.visible),void 0!==e.enableEventPropagation&&(this.enableEventPropagation=e.enableEventPropagation),this.div&&this.draw()},e.prototype.setContent=function(e){this.content=e,this.div&&(this.closeListener&&(google.maps.event.removeListener(this.closeListener),this.closeListener=null),this.fixedWidthSet||(this.div.style.width=""),"string"==typeof e?this.div.innerHTML=this.getCloseBoxImg()+e:(this.div.innerHTML=this.getCloseBoxImg(),this.div.appendChild(e)),this.fixedWidthSet||(this.div.style.width=this.div.offsetWidth+"px","string"==typeof e?this.div.innerHTML=this.getCloseBoxImg()+e:(this.div.innerHTML=this.getCloseBoxImg(),this.div.appendChild(e))),this.addClickHandler()),google.maps.event.trigger(this,"content_changed")},e.prototype.setPosition=function(e){this.position=e,this.div&&this.draw(),google.maps.event.trigger(this,"position_changed")},e.prototype.setVisible=function(e){this.isHidden=!e,this.div&&(this.div.style.visibility=this.isHidden?"hidden":"visible")},e.prototype.setZIndex=function(e){this.zIndex=e,this.div&&(this.div.style.zIndex=e+""),google.maps.event.trigger(this,"zindex_changed")},e.prototype.getContent=function(){return this.content},e.prototype.getPosition=function(){return this.position},e.prototype.getZIndex=function(){return this.zIndex},e.prototype.getVisible=function(){var e=this.getMap();return null!=e&&!this.isHidden},e.prototype.show=function(){this.isHidden=!1,this.div&&(this.div.style.visibility="visible")},e.prototype.hide=function(){this.isHidden=!0,this.div&&(this.div.style.visibility="hidden")},e.prototype.open=function(e,t){var n=this;t&&(this.position=t.getPosition(),this.moveListener=google.maps.event.addListener(t,"position_changed",(function(){var e=t.getPosition();n.setPosition(e)})),this.mapListener=google.maps.event.addListener(t,"map_changed",(function(){n.setMap(t.map)}))),this.setMap(e),this.div&&this.panBox()},e.prototype.close=function(){if(this.closeListener&&(google.maps.event.removeListener(this.closeListener),this.closeListener=null),this.eventListeners){for(var e=0,t=this.eventListeners;e<t.length;e++){var n=t[e];google.maps.event.removeListener(n)}this.eventListeners=null}this.moveListener&&(google.maps.event.removeListener(this.moveListener),this.moveListener=null),this.mapListener&&(google.maps.event.removeListener(this.mapListener),this.mapListener=null),this.contextListener&&(google.maps.event.removeListener(this.contextListener),this.contextListener=null),this.setMap(null)},e.prototype.extend=function(e,t){return function(e){for(var t in e.prototype)Object.prototype.hasOwnProperty.call(this,t)||(this.prototype[t]=e.prototype[t]);return this}.apply(e,[t])},e}();const Se={onCloseClick:"closeclick",onContentChanged:"content_changed",onDomReady:"domready",onPositionChanged:"position_changed",onZindexChanged:"zindex_changed"},Ie={options(e,t){e.setOptions(t)},position(e,t){t instanceof google.maps.LatLng?e.setPosition(t):e.setPosition(new google.maps.LatLng(t.lat,t.lng))},visible(e,t){e.setVisible(t)},zIndex(e,t){e.setZIndex(t)}},De={};const Oe=i((function({children:e,anchor:t,options:n,position:s,zIndex:i,onCloseClick:p,onDomReady:d,onContentChanged:h,onPositionChanged:u,onZindexChanged:c,onLoad:m,onUnmount:f}){const L=o(M),[y,C]=r(null),[x,k]=r(null),[w,P]=r(null),[E,S]=r(null),[I,D]=r(null),[O,B]=r(null),_=a(null);return l((()=>{L&&null!==y&&(y.close(),t?y.open(L,t):y.getPosition()&&y.open(L))}),[L,y,t]),l((()=>{n&&null!==y&&y.setOptions(n)}),[y,n]),l((()=>{if(s&&null!==y){const e=s instanceof google.maps.LatLng?s:new google.maps.LatLng(s.lat,s.lng);y.setPosition(e)}}),[s]),l((()=>{"number"==typeof i&&null!==y&&y.setZIndex(i)}),[i]),l((()=>{y&&p&&(null!==x&&google.maps.event.removeListener(x),k(google.maps.event.addListener(y,"closeclick",p)))}),[p]),l((()=>{y&&d&&(null!==w&&google.maps.event.removeListener(w),P(google.maps.event.addListener(y,"domready",d)))}),[d]),l((()=>{y&&h&&(null!==E&&google.maps.event.removeListener(E),S(google.maps.event.addListener(y,"content_changed",h)))}),[h]),l((()=>{y&&u&&(null!==I&&google.maps.event.removeListener(I),D(google.maps.event.addListener(y,"position_changed",u)))}),[u]),l((()=>{y&&c&&(null!==O&&google.maps.event.removeListener(O),B(google.maps.event.addListener(y,"zindex_changed",c)))}),[c]),l((()=>{if(L){const{position:e,...s}=n||De;let o;!e||e instanceof google.maps.LatLng||(o=new google.maps.LatLng(e.lat,e.lng));const i=new Ee({...s,...o?{position:o}:{}});_.current=document.createElement("div"),C(i),p&&k(google.maps.event.addListener(i,"closeclick",p)),d&&P(google.maps.event.addListener(i,"domready",d)),h&&S(google.maps.event.addListener(i,"content_changed",h)),u&&D(google.maps.event.addListener(i,"position_changed",u)),c&&B(google.maps.event.addListener(i,"zindex_changed",c)),i.setContent(_.current),t?i.open(L,t):i.getPosition()?i.open(L):b(!1,"You must provide either an anchor or a position prop for <InfoBox>."),m&&m(i)}return()=>{null!==y&&(x&&google.maps.event.removeListener(x),E&&google.maps.event.removeListener(E),w&&google.maps.event.removeListener(w),I&&google.maps.event.removeListener(I),O&&google.maps.event.removeListener(O),f&&f(y),y.close())}}),[]),_.current?v(g.only(e),_.current):null}));class Be extends p{static contextType=M;registeredEvents=[];containerElement=null;state={infoBox:null};open=(e,t)=>{t?null!==this.context&&e.open(this.context,t):e.getPosition()?null!==this.context&&e.open(this.context):b(!1,"You must provide either an anchor or a position prop for <InfoBox>.")};setInfoBoxCallback=()=>{null!==this.state.infoBox&&null!==this.containerElement&&(this.state.infoBox.setContent(this.containerElement),this.open(this.state.infoBox,this.props.anchor),this.props.onLoad&&this.props.onLoad(this.state.infoBox))};componentDidMount(){const{position:e,...t}=this.props.options||{};let n;!e||e instanceof google.maps.LatLng||(n=new google.maps.LatLng(e.lat,e.lng));const s=new Ee({...t,...n?{position:n}:{}});this.containerElement=document.createElement("div"),this.registeredEvents=E({updaterMap:Ie,eventMap:Se,prevProps:{},nextProps:this.props,instance:s}),this.setState({infoBox:s},this.setInfoBoxCallback)}componentDidUpdate(e){const{infoBox:t}=this.state;null!==t&&(P(this.registeredEvents),this.registeredEvents=E({updaterMap:Ie,eventMap:Se,prevProps:e,nextProps:this.props,instance:t}))}componentWillUnmount(){const{onUnmount:e}=this.props,{infoBox:t}=this.state;null!==t&&(e&&e(t),P(this.registeredEvents),t.close())}render(){return this.containerElement?v(g.only(this.props.children),this.containerElement):null}}var _e,Te;var Ue=(Te||(Te=1,_e=function e(t,n){if(t===n)return!0;if(t&&n&&"object"==typeof t&&"object"==typeof n){if(t.constructor!==n.constructor)return!1;var s,o,i;if(Array.isArray(t)){if((s=t.length)!=n.length)return!1;for(o=s;0!=o--;)if(!e(t[o],n[o]))return!1;return!0}if(t.constructor===RegExp)return t.source===n.source&&t.flags===n.flags;if(t.valueOf!==Object.prototype.valueOf)return t.valueOf()===n.valueOf();if(t.toString!==Object.prototype.toString)return t.toString()===n.toString();if((s=(i=Object.keys(t)).length)!==Object.keys(n).length)return!1;for(o=s;0!=o--;)if(!Object.prototype.hasOwnProperty.call(n,i[o]))return!1;for(o=s;0!=o--;){var r=i[o];if(!e(t[r],n[r]))return!1}return!0}return t!=t&&n!=n}),_e),ze=f(Ue);const Re=[Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];class Ae{static from(e){if(!(e instanceof ArrayBuffer))throw new Error("Data must be an instance of ArrayBuffer.");const[t,n]=new Uint8Array(e,0,2);if(219!==t)throw new Error("Data does not appear to be in a KDBush format.");const s=n>>4;if(1!==s)throw new Error(`Got v${s} data when expected v1.`);const o=Re[15&n];if(!o)throw new Error("Unrecognized array type.");const[i]=new Uint16Array(e,2,1),[r]=new Uint32Array(e,4,1);return new Ae(r,i,o,e)}constructor(e,t=64,n=Float64Array,s){if(isNaN(e)||e<0)throw new Error(`Unpexpected numItems value: ${e}.`);this.numItems=+e,this.nodeSize=Math.min(Math.max(+t,2),65535),this.ArrayType=n,this.IndexArrayType=e<65536?Uint16Array:Uint32Array;const o=Re.indexOf(this.ArrayType),i=2*e*this.ArrayType.BYTES_PER_ELEMENT,r=e*this.IndexArrayType.BYTES_PER_ELEMENT,a=(8-r%8)%8;if(o<0)throw new Error(`Unexpected typed array class: ${n}.`);s&&s instanceof ArrayBuffer?(this.data=s,this.ids=new this.IndexArrayType(this.data,8,e),this.coords=new this.ArrayType(this.data,8+r+a,2*e),this._pos=2*e,this._finished=!0):(this.data=new ArrayBuffer(8+i+r+a),this.ids=new this.IndexArrayType(this.data,8,e),this.coords=new this.ArrayType(this.data,8+r+a,2*e),this._pos=0,this._finished=!1,new Uint8Array(this.data,0,2).set([219,16+o]),new Uint16Array(this.data,2,1)[0]=t,new Uint32Array(this.data,4,1)[0]=e)}add(e,t){const n=this._pos>>1;return this.ids[n]=n,this.coords[this._pos++]=e,this.coords[this._pos++]=t,n}finish(){const e=this._pos>>1;if(e!==this.numItems)throw new Error(`Added ${e} items when expected ${this.numItems}.`);return Ze(this.ids,this.coords,this.nodeSize,0,this.numItems-1,0),this._finished=!0,this}range(e,t,n,s){if(!this._finished)throw new Error("Data not yet indexed - call index.finish().");const{ids:o,coords:i,nodeSize:r}=this,a=[0,o.length-1,0],l=[];for(;a.length;){const p=a.pop()||0,d=a.pop()||0,h=a.pop()||0;if(d-h<=r){for(let r=h;r<=d;r++){const a=i[2*r],p=i[2*r+1];a>=e&&a<=n&&p>=t&&p<=s&&l.push(o[r])}continue}const g=h+d>>1,u=i[2*g],c=i[2*g+1];u>=e&&u<=n&&c>=t&&c<=s&&l.push(o[g]),(0===p?e<=u:t<=c)&&(a.push(h),a.push(g-1),a.push(1-p)),(0===p?n>=u:s>=c)&&(a.push(g+1),a.push(d),a.push(1-p))}return l}within(e,t,n){if(!this._finished)throw new Error("Data not yet indexed - call index.finish().");const{ids:s,coords:o,nodeSize:i}=this,r=[0,s.length-1,0],a=[],l=n*n;for(;r.length;){const p=r.pop()||0,d=r.pop()||0,h=r.pop()||0;if(d-h<=i){for(let n=h;n<=d;n++)je(o[2*n],o[2*n+1],e,t)<=l&&a.push(s[n]);continue}const g=h+d>>1,u=o[2*g],c=o[2*g+1];je(u,c,e,t)<=l&&a.push(s[g]),(0===p?e-n<=u:t-n<=c)&&(r.push(h),r.push(g-1),r.push(1-p)),(0===p?e+n>=u:t+n>=c)&&(r.push(g+1),r.push(d),r.push(1-p))}return a}}function Ze(e,t,n,s,o,i){if(o-s<=n)return;const r=s+o>>1;Ve(e,t,r,s,o,i),Ze(e,t,n,s,r-1,1-i),Ze(e,t,n,r+1,o,1-i)}function Ve(e,t,n,s,o,i){for(;o>s;){if(o-s>600){const r=o-s+1,a=n-s+1,l=Math.log(r),p=.5*Math.exp(2*l/3),d=.5*Math.sqrt(l*p*(r-p)/r)*(a-r/2<0?-1:1);Ve(e,t,n,Math.max(s,Math.floor(n-a*p/r+d)),Math.min(o,Math.floor(n+(r-a)*p/r+d)),i)}const r=t[2*n+i];let a=s,l=o;for(We(e,t,s,n),t[2*o+i]>r&&We(e,t,s,o);a<l;){for(We(e,t,a,l),a++,l--;t[2*a+i]<r;)a++;for(;t[2*l+i]>r;)l--}t[2*s+i]===r?We(e,t,s,l):(l++,We(e,t,l,o)),l<=n&&(s=l+1),n<=l&&(o=l-1)}}function We(e,t,n,s){Ne(e,n,s),Ne(t,2*n,2*s),Ne(t,2*n+1,2*s+1)}function Ne(e,t,n){const s=e[t];e[t]=e[n],e[n]=s}function je(e,t,n,s){const o=e-n,i=t-s;return o*o+i*i}const He={minZoom:0,maxZoom:16,minPoints:2,radius:40,extent:512,nodeSize:64,log:!1,generateId:!1,reduce:null,map:e=>e},Ge=Math.fround||($e=new Float32Array(1),e=>($e[0]=+e,$e[0]));var $e;class Fe{constructor(e){this.options=Object.assign(Object.create(He),e),this.trees=new Array(this.options.maxZoom+1),this.stride=this.options.reduce?7:6,this.clusterProps=[]}load(e){const{log:t,minZoom:n,maxZoom:s}=this.options;t&&console.time("total time");const o=`prepare ${e.length} points`;t&&console.time(o),this.points=e;const i=[];for(let t=0;t<e.length;t++){const n=e[t];if(!n.geometry)continue;const[s,o]=n.geometry.coordinates,r=Ge(qe(s)),a=Ge(Je(o));i.push(r,a,1/0,t,-1,1),this.options.reduce&&i.push(0)}let r=this.trees[s+1]=this._createTree(i);t&&console.timeEnd(o);for(let e=s;e>=n;e--){const n=+Date.now();r=this.trees[e]=this._createTree(this._cluster(r,e)),t&&console.log("z%d: %d clusters in %dms",e,r.numItems,+Date.now()-n)}return t&&console.timeEnd("total time"),this}getClusters(e,t){let n=((e[0]+180)%360+360)%360-180;const s=Math.max(-90,Math.min(90,e[1]));let o=180===e[2]?180:((e[2]+180)%360+360)%360-180;const i=Math.max(-90,Math.min(90,e[3]));if(e[2]-e[0]>=360)n=-180,o=180;else if(n>o){const e=this.getClusters([n,s,180,i],t),r=this.getClusters([-180,s,o,i],t);return e.concat(r)}const r=this.trees[this._limitZoom(t)],a=r.range(qe(n),Je(i),qe(o),Je(s)),l=r.data,p=[];for(const e of a){const t=this.stride*e;p.push(l[t+5]>1?Ke(l,t,this.clusterProps):this.points[l[t+3]])}return p}getChildren(e){const t=this._getOriginId(e),n=this._getOriginZoom(e),s="No cluster with the specified id.",o=this.trees[n];if(!o)throw new Error(s);const i=o.data;if(t*this.stride>=i.length)throw new Error(s);const r=this.options.radius/(this.options.extent*Math.pow(2,n-1)),a=i[t*this.stride],l=i[t*this.stride+1],p=o.within(a,l,r),d=[];for(const t of p){const n=t*this.stride;i[n+4]===e&&d.push(i[n+5]>1?Ke(i,n,this.clusterProps):this.points[i[n+3]])}if(0===d.length)throw new Error(s);return d}getLeaves(e,t,n){t=t||10,n=n||0;const s=[];return this._appendLeaves(s,e,t,n,0),s}getTile(e,t,n){const s=this.trees[this._limitZoom(e)],o=Math.pow(2,e),{extent:i,radius:r}=this.options,a=r/i,l=(n-a)/o,p=(n+1+a)/o,d={features:[]};return this._addTileFeatures(s.range((t-a)/o,l,(t+1+a)/o,p),s.data,t,n,o,d),0===t&&this._addTileFeatures(s.range(1-a/o,l,1,p),s.data,o,n,o,d),t===o-1&&this._addTileFeatures(s.range(0,l,a/o,p),s.data,-1,n,o,d),d.features.length?d:null}getClusterExpansionZoom(e){let t=this._getOriginZoom(e)-1;for(;t<=this.options.maxZoom;){const n=this.getChildren(e);if(t++,1!==n.length)break;e=n[0].properties.cluster_id}return t}_appendLeaves(e,t,n,s,o){const i=this.getChildren(t);for(const t of i){const i=t.properties;if(i&&i.cluster?o+i.point_count<=s?o+=i.point_count:o=this._appendLeaves(e,i.cluster_id,n,s,o):o<s?o++:e.push(t),e.length===n)break}return o}_createTree(e){const t=new Ae(e.length/this.stride|0,this.options.nodeSize,Float32Array);for(let n=0;n<e.length;n+=this.stride)t.add(e[n],e[n+1]);return t.finish(),t.data=e,t}_addTileFeatures(e,t,n,s,o,i){for(const r of e){const e=r*this.stride,a=t[e+5]>1;let l,p,d;if(a)l=Ye(t,e,this.clusterProps),p=t[e],d=t[e+1];else{const n=this.points[t[e+3]];l=n.properties;const[s,o]=n.geometry.coordinates;p=qe(s),d=Je(o)}const h={type:1,geometry:[[Math.round(this.options.extent*(p*o-n)),Math.round(this.options.extent*(d*o-s))]],tags:l};let g;g=a||this.options.generateId?t[e+3]:this.points[t[e+3]].id,void 0!==g&&(h.id=g),i.features.push(h)}}_limitZoom(e){return Math.max(this.options.minZoom,Math.min(Math.floor(+e),this.options.maxZoom+1))}_cluster(e,t){const{radius:n,extent:s,reduce:o,minPoints:i}=this.options,r=n/(s*Math.pow(2,t)),a=e.data,l=[],p=this.stride;for(let n=0;n<a.length;n+=p){if(a[n+2]<=t)continue;a[n+2]=t;const s=a[n],d=a[n+1],h=e.within(a[n],a[n+1],r),g=a[n+5];let u=g;for(const e of h){const n=e*p;a[n+2]>t&&(u+=a[n+5])}if(u>g&&u>=i){let e,i=s*g,r=d*g,c=-1;const m=(n/p<<5)+(t+1)+this.points.length;for(const s of h){const l=s*p;if(a[l+2]<=t)continue;a[l+2]=t;const d=a[l+5];i+=a[l]*d,r+=a[l+1]*d,a[l+4]=m,o&&(e||(e=this._map(a,n,!0),c=this.clusterProps.length,this.clusterProps.push(e)),o(e,this._map(a,l)))}a[n+4]=m,l.push(i/u,r/u,1/0,m,-1,u),o&&l.push(c)}else{for(let e=0;e<p;e++)l.push(a[n+e]);if(u>1)for(const e of h){const n=e*p;if(!(a[n+2]<=t)){a[n+2]=t;for(let e=0;e<p;e++)l.push(a[n+e])}}}}return l}_getOriginId(e){return e-this.points.length>>5}_getOriginZoom(e){return(e-this.points.length)%32}_map(e,t,n){if(e[t+5]>1){const s=this.clusterProps[e[t+6]];return n?Object.assign({},s):s}const s=this.points[e[t+3]].properties,o=this.options.map(s);return n&&o===s?Object.assign({},o):o}}function Ke(e,t,n){return{type:"Feature",id:e[t+3],properties:Ye(e,t,n),geometry:{type:"Point",coordinates:[(s=e[t],360*(s-.5)),Xe(e[t+1])]}};var s}function Ye(e,t,n){const s=e[t+5],o=s>=1e4?`${Math.round(s/1e3)}k`:s>=1e3?Math.round(s/100)/10+"k":s,i=e[t+6],r=-1===i?{}:Object.assign({},n[i]);return Object.assign(r,{cluster:!0,cluster_id:e[t+3],point_count:s,point_count_abbreviated:o})}function qe(e){return e/360+.5}function Je(e){const t=Math.sin(e*Math.PI/180),n=.5-.25*Math.log((1+t)/(1-t))/Math.PI;return n<0?0:n>1?1:n}function Xe(e){const t=(180-360*e)*Math.PI/180;return 360*Math.atan(Math.exp(t))/Math.PI-90}
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */function Qe(e,t){var n={};for(var s in e)Object.prototype.hasOwnProperty.call(e,s)&&t.indexOf(s)<0&&(n[s]=e[s]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var o=0;for(s=Object.getOwnPropertySymbols(e);o<s.length;o++)t.indexOf(s[o])<0&&Object.prototype.propertyIsEnumerable.call(e,s[o])&&(n[s[o]]=e[s[o]])}return n}class et{static isAdvancedMarkerAvailable(e){return google.maps.marker&&!0===e.getMapCapabilities().isAdvancedMarkersAvailable}static isAdvancedMarker(e){return google.maps.marker&&e instanceof google.maps.marker.AdvancedMarkerElement}static setMap(e,t){this.isAdvancedMarker(e)?e.map=t:e.setMap(t)}static getPosition(e){if(this.isAdvancedMarker(e)){if(e.position){if(e.position instanceof google.maps.LatLng)return e.position;if(e.position.lat&&e.position.lng)return new google.maps.LatLng(e.position.lat,e.position.lng)}return new google.maps.LatLng(null)}return e.getPosition()}static getVisible(e){return!!this.isAdvancedMarker(e)||e.getVisible()}}class tt{constructor({markers:e,position:t}){this.markers=e,t&&(t instanceof google.maps.LatLng?this._position=t:this._position=new google.maps.LatLng(t))}get bounds(){if(0===this.markers.length&&!this._position)return;const e=new google.maps.LatLngBounds(this._position,this._position);for(const t of this.markers)e.extend(et.getPosition(t));return e}get position(){return this._position||this.bounds.getCenter()}get count(){return this.markers.filter((e=>et.getVisible(e))).length}push(e){this.markers.push(e)}delete(){this.marker&&(et.setMap(this.marker,null),this.marker=void 0),this.markers.length=0}}const nt=(e,t,n,s)=>{const o=st(e.getBounds(),t,s);return n.filter((e=>o.contains(et.getPosition(e))))},st=(e,t,n)=>{const{northEast:s,southWest:o}=rt(e,t),i=at({northEast:s,southWest:o},n);return lt(i,t)},ot=(e,t,n)=>{const s=st(e,t,n),o=s.getNorthEast(),i=s.getSouthWest();return[i.lng(),i.lat(),o.lng(),o.lat()]},it=(e,t)=>{const n=(t.lat-e.lat)*Math.PI/180,s=(t.lng-e.lng)*Math.PI/180,o=Math.sin(n/2),i=Math.sin(s/2),r=o*o+Math.cos(e.lat*Math.PI/180)*Math.cos(t.lat*Math.PI/180)*i*i;return 6371*(2*Math.atan2(Math.sqrt(r),Math.sqrt(1-r)))},rt=(e,t)=>({northEast:t.fromLatLngToDivPixel(e.getNorthEast()),southWest:t.fromLatLngToDivPixel(e.getSouthWest())}),at=({northEast:e,southWest:t},n)=>(e.x+=n,e.y-=n,t.x-=n,t.y+=n,{northEast:e,southWest:t}),lt=({northEast:e,southWest:t},n)=>{const s=n.fromDivPixelToLatLng(t),o=n.fromDivPixelToLatLng(e);return new google.maps.LatLngBounds(s,o)};class pt{constructor({maxZoom:e=16}){this.maxZoom=e}noop({markers:e}){return ht(e)}}class dt extends pt{constructor(e){var{viewportPadding:t=60}=e;super(Qe(e,["viewportPadding"])),this.viewportPadding=60,this.viewportPadding=t}calculate({markers:e,map:t,mapCanvasProjection:n}){return t.getZoom()>=this.maxZoom?{clusters:this.noop({markers:e}),changed:!1}:{clusters:this.cluster({markers:nt(t,n,e,this.viewportPadding),map:t,mapCanvasProjection:n})}}}const ht=e=>e.map((e=>new tt({position:et.getPosition(e),markers:[e]})));class gt extends pt{constructor(e){var{maxZoom:t,radius:n=60}=e,s=Qe(e,["maxZoom","radius"]);super({maxZoom:t}),this.state={zoom:-1},this.superCluster=new Fe(Object.assign({maxZoom:this.maxZoom,radius:n},s))}calculate(e){let t=!1;const n={zoom:e.map.getZoom()};if(!ze(e.markers,this.markers)){t=!0,this.markers=[...e.markers];const n=this.markers.map((e=>{const t=et.getPosition(e);return{type:"Feature",geometry:{type:"Point",coordinates:[t.lng(),t.lat()]},properties:{marker:e}}}));this.superCluster.load(n)}return t||(this.state.zoom<=this.maxZoom||n.zoom<=this.maxZoom)&&(t=!ze(this.state,n)),this.state=n,t&&(this.clusters=this.cluster(e)),{clusters:this.clusters,changed:t}}cluster({map:e}){return this.superCluster.getClusters([-180,-90,180,90],Math.round(e.getZoom())).map((e=>this.transformCluster(e)))}transformCluster({geometry:{coordinates:[e,t]},properties:n}){if(n.cluster)return new tt({markers:this.superCluster.getLeaves(n.cluster_id,1/0).map((e=>e.properties.marker)),position:{lat:t,lng:e}});const s=n.marker;return new tt({markers:[s],position:et.getPosition(s)})}}class ut{constructor(e,t){this.markers={sum:e.length};const n=t.map((e=>e.count)),s=n.reduce(((e,t)=>e+t),0);this.clusters={count:t.length,markers:{mean:s/t.length,sum:s,min:Math.min(...n),max:Math.max(...n)}}}}class ct{render({count:e,position:t},n,s){const o=`<svg fill="${e>Math.max(10,n.clusters.markers.mean)?"#ff0000":"#0000ff"}" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 240 240" width="50" height="50">\n<circle cx="120" cy="120" opacity=".6" r="70" />\n<circle cx="120" cy="120" opacity=".3" r="90" />\n<circle cx="120" cy="120" opacity=".2" r="110" />\n<text x="50%" y="50%" style="fill:#fff" text-anchor="middle" font-size="50" dominant-baseline="middle" font-family="roboto,arial,sans-serif">${e}</text>\n</svg>`,i=`Cluster of ${e} markers`,r=Number(google.maps.Marker.MAX_ZINDEX)+e;if(et.isAdvancedMarkerAvailable(s)){const e=(new DOMParser).parseFromString(o,"image/svg+xml").documentElement;e.setAttribute("transform","translate(0 25)");const n={map:s,position:t,zIndex:r,title:i,content:e};return new google.maps.marker.AdvancedMarkerElement(n)}const a={position:t,zIndex:r,title:i,icon:{url:`data:image/svg+xml;base64,${btoa(o)}`,anchor:new google.maps.Point(25,25)}};return new google.maps.Marker(a)}}class mt{constructor(){!function(e,t){for(let n in t.prototype)e.prototype[n]=t.prototype[n]}(mt,google.maps.OverlayView)}}var vt;!function(e){e.CLUSTERING_BEGIN="clusteringbegin",e.CLUSTERING_END="clusteringend",e.CLUSTER_CLICK="click"}(vt||(vt={}));const ft=(e,t,n)=>{n.fitBounds(t.bounds)};class Lt extends mt{constructor({map:e,markers:t=[],algorithmOptions:n={},algorithm:s=new gt(n),renderer:o=new ct,onClusterClick:i=ft}){super(),this.markers=[...t],this.clusters=[],this.algorithm=s,this.renderer=o,this.onClusterClick=i,e&&this.setMap(e)}addMarker(e,t){this.markers.includes(e)||(this.markers.push(e),t||this.render())}addMarkers(e,t){e.forEach((e=>{this.addMarker(e,!0)})),t||this.render()}removeMarker(e,t){const n=this.markers.indexOf(e);return-1!==n&&(et.setMap(e,null),this.markers.splice(n,1),t||this.render(),!0)}removeMarkers(e,t){let n=!1;return e.forEach((e=>{n=this.removeMarker(e,!0)||n})),n&&!t&&this.render(),n}clearMarkers(e){this.markers.length=0,e||this.render()}render(){const e=this.getMap();if(e instanceof google.maps.Map&&e.getProjection()){google.maps.event.trigger(this,vt.CLUSTERING_BEGIN,this);const{clusters:t,changed:n}=this.algorithm.calculate({markers:this.markers,map:e,mapCanvasProjection:this.getProjection()});if(n||null==n){const e=new Set;for(const n of t)1==n.markers.length&&e.add(n.markers[0]);const n=[];for(const t of this.clusters)null!=t.marker&&(1==t.markers.length?e.has(t.marker)||et.setMap(t.marker,null):n.push(t.marker));this.clusters=t,this.renderClusters(),requestAnimationFrame((()=>n.forEach((e=>et.setMap(e,null)))))}google.maps.event.trigger(this,vt.CLUSTERING_END,this)}}onAdd(){this.idleListener=this.getMap().addListener("idle",this.render.bind(this)),this.render()}onRemove(){google.maps.event.removeListener(this.idleListener),this.reset()}reset(){this.markers.forEach((e=>et.setMap(e,null))),this.clusters.forEach((e=>e.delete())),this.clusters=[]}renderClusters(){const e=new ut(this.markers,this.clusters),t=this.getMap();this.clusters.forEach((n=>{1===n.markers.length?n.marker=n.markers[0]:(n.marker=this.renderer.render(n,e,t),n.markers.forEach((e=>et.setMap(e,null))),this.onClusterClick&&n.marker.addListener("click",(e=>{google.maps.event.trigger(this,vt.CLUSTER_CLICK,n),this.onClusterClick(e,n,t)}))),et.setMap(n.marker,t)}))}}var yt=Object.freeze({__proto__:null,AbstractAlgorithm:pt,AbstractViewportAlgorithm:dt,Cluster:tt,ClusterStats:ut,DefaultRenderer:ct,GridAlgorithm:class extends dt{constructor(e){var{maxDistance:t=4e4,gridSize:n=40}=e;super(Qe(e,["maxDistance","gridSize"])),this.clusters=[],this.state={zoom:-1},this.maxDistance=t,this.gridSize=n}calculate({markers:e,map:t,mapCanvasProjection:n}){const s={zoom:t.getZoom()};let o=!1;return this.state.zoom>=this.maxZoom&&s.zoom>=this.maxZoom||(o=!ze(this.state,s)),this.state=s,t.getZoom()>=this.maxZoom?{clusters:this.noop({markers:e}),changed:o}:{clusters:this.cluster({markers:nt(t,n,e,this.viewportPadding),map:t,mapCanvasProjection:n})}}cluster({markers:e,map:t,mapCanvasProjection:n}){return this.clusters=[],e.forEach((e=>{this.addToClosestCluster(e,t,n)})),this.clusters}addToClosestCluster(e,t,n){let s=this.maxDistance,o=null;for(let t=0;t<this.clusters.length;t++){const n=this.clusters[t],i=it(n.bounds.getCenter().toJSON(),et.getPosition(e).toJSON());i<s&&(s=i,o=n)}if(o&&st(o.bounds,n,this.gridSize).contains(et.getPosition(e)))o.push(e);else{const t=new tt({markers:[e]});this.clusters.push(t)}}},MarkerClusterer:Lt,get MarkerClustererEvents(){return vt},MarkerUtils:et,NoopAlgorithm:class extends pt{constructor(e){super(Qe(e,[]))}calculate({markers:e,map:t,mapCanvasProjection:n}){return{clusters:this.cluster({markers:e,map:t,mapCanvasProjection:n}),changed:!1}}cluster(e){return this.noop(e)}},SuperClusterAlgorithm:gt,SuperClusterViewportAlgorithm:class extends dt{constructor(e){var{maxZoom:t,radius:n=60,viewportPadding:s=60}=e,o=Qe(e,["maxZoom","radius","viewportPadding"]);super({maxZoom:t,viewportPadding:s}),this.superCluster=new Fe(Object.assign({maxZoom:this.maxZoom,radius:n},o)),this.state={zoom:-1,view:[0,0,0,0]}}calculate(e){const t={zoom:Math.round(e.map.getZoom()),view:ot(e.map.getBounds(),e.mapCanvasProjection,this.viewportPadding)};let n=!ze(this.state,t);if(!ze(e.markers,this.markers)){n=!0,this.markers=[...e.markers];const t=this.markers.map((e=>{const t=et.getPosition(e);return{type:"Feature",geometry:{type:"Point",coordinates:[t.lng(),t.lat()]},properties:{marker:e}}}));this.superCluster.load(t)}return n&&(this.clusters=this.cluster(e),this.state=t),{clusters:this.clusters,changed:n}}cluster({map:e,mapCanvasProjection:t}){const n={zoom:Math.round(e.getZoom()),view:ot(e.getBounds(),t,this.viewportPadding)};return this.superCluster.getClusters(n.view,n.zoom).map((e=>this.transformCluster(e)))}transformCluster({geometry:{coordinates:[e,t]},properties:n}){if(n.cluster)return new tt({markers:this.superCluster.getLeaves(n.cluster_id,1/0).map((e=>e.properties.marker)),position:{lat:t,lng:e}});const s=n.marker;return new tt({markers:[s],position:et.getPosition(s)})}},defaultOnClusterClickHandler:ft,distanceBetweenPoints:it,extendBoundsToPaddedViewport:st,extendPixelBounds:at,filterMarkersToPaddedViewport:nt,getPaddedViewport:ot,noop:ht,pixelBoundsToLatLngBounds:lt});var bt=i((function({children:e,options:t}){const n=function(e){const t=C(),[n,s]=r(null);return l((()=>{if(t&&null===n){const n=new Lt({...e,map:t});s(n)}}),[t]),n}(t);return null!==n?e(n):null}));const Mt={onCloseClick:"closeclick",onContentChanged:"content_changed",onDomReady:"domready",onPositionChanged:"position_changed",onZindexChanged:"zindex_changed"},Ct={options(e,t){e.setOptions(t)},position(e,t){e.setPosition(t)},zIndex(e,t){e.setZIndex(t)}};const xt=i((function({children:e,anchor:t,options:n,position:s,zIndex:i,onCloseClick:p,onDomReady:d,onContentChanged:h,onPositionChanged:u,onZindexChanged:c,onLoad:m,onUnmount:f}){const L=o(M),[y,C]=r(null),[x,k]=r(null),[w,P]=r(null),[E,S]=r(null),[I,D]=r(null),[O,B]=r(null),_=a(null);return l((()=>{null!==y&&(y.close(),t?y.open(L,t):y.getPosition()&&y.open(L))}),[L,y,t]),l((()=>{n&&null!==y&&y.setOptions(n)}),[y,n]),l((()=>{s&&null!==y&&y.setPosition(s)}),[s]),l((()=>{"number"==typeof i&&null!==y&&y.setZIndex(i)}),[i]),l((()=>{y&&p&&(null!==x&&google.maps.event.removeListener(x),k(google.maps.event.addListener(y,"closeclick",p)))}),[p]),l((()=>{y&&d&&(null!==w&&google.maps.event.removeListener(w),P(google.maps.event.addListener(y,"domready",d)))}),[d]),l((()=>{y&&h&&(null!==E&&google.maps.event.removeListener(E),S(google.maps.event.addListener(y,"content_changed",h)))}),[h]),l((()=>{y&&u&&(null!==I&&google.maps.event.removeListener(I),D(google.maps.event.addListener(y,"position_changed",u)))}),[u]),l((()=>{y&&c&&(null!==O&&google.maps.event.removeListener(O),B(google.maps.event.addListener(y,"zindex_changed",c)))}),[c]),l((()=>{const e=new google.maps.InfoWindow(n);return C(e),_.current=document.createElement("div"),p&&k(google.maps.event.addListener(e,"closeclick",p)),d&&P(google.maps.event.addListener(e,"domready",d)),h&&S(google.maps.event.addListener(e,"content_changed",h)),u&&D(google.maps.event.addListener(e,"position_changed",u)),c&&B(google.maps.event.addListener(e,"zindex_changed",c)),e.setContent(_.current),s&&e.setPosition(s),i&&e.setZIndex(i),t?e.open(L,t):e.getPosition()?e.open(L):b(!1,"You must provide either an anchor (typically render it inside a <Marker>) or a position props for <InfoWindow>."),m&&m(e),()=>{x&&google.maps.event.removeListener(x),E&&google.maps.event.removeListener(E),w&&google.maps.event.removeListener(w),I&&google.maps.event.removeListener(I),O&&google.maps.event.removeListener(O),f&&f(e),e.close()}}),[]),_.current?v(g.only(e),_.current):null}));class kt extends p{static contextType=M;registeredEvents=[];containerElement=null;state={infoWindow:null};open=(e,t)=>{t?e.open(this.context,t):e.getPosition()?e.open(this.context):b(!1,"You must provide either an anchor (typically render it inside a <Marker>) or a position props for <InfoWindow>.")};setInfoWindowCallback=()=>{null!==this.state.infoWindow&&null!==this.containerElement&&(this.state.infoWindow.setContent(this.containerElement),this.open(this.state.infoWindow,this.props.anchor),this.props.onLoad&&this.props.onLoad(this.state.infoWindow))};componentDidMount(){const e=new google.maps.InfoWindow(this.props.options);this.containerElement=document.createElement("div"),this.registeredEvents=E({updaterMap:Ct,eventMap:Mt,prevProps:{},nextProps:this.props,instance:e}),this.setState((()=>({infoWindow:e})),this.setInfoWindowCallback)}componentDidUpdate(e){null!==this.state.infoWindow&&(P(this.registeredEvents),this.registeredEvents=E({updaterMap:Ct,eventMap:Mt,prevProps:e,nextProps:this.props,instance:this.state.infoWindow}))}componentWillUnmount(){null!==this.state.infoWindow&&(P(this.registeredEvents),this.props.onUnmount&&this.props.onUnmount(this.state.infoWindow),this.state.infoWindow.close())}render(){return this.containerElement?v(g.only(this.props.children),this.containerElement):null}}const wt={onClick:"click",onDblClick:"dblclick",onDrag:"drag",onDragEnd:"dragend",onDragStart:"dragstart",onMouseDown:"mousedown",onMouseMove:"mousemove",onMouseOut:"mouseout",onMouseOver:"mouseover",onMouseUp:"mouseup",onRightClick:"rightclick"},Pt={draggable(e,t){e.setDraggable(t)},editable(e,t){e.setEditable(t)},map(e,t){e.setMap(t)},options(e,t){e.setOptions(t)},path(e,t){e.setPath(t)},visible(e,t){e.setVisible(t)}},Et={};const St=i((function({options:e,draggable:t,editable:n,visible:s,path:i,onDblClick:a,onDragEnd:p,onDragStart:d,onMouseDown:h,onMouseMove:g,onMouseOut:u,onMouseOver:c,onMouseUp:m,onRightClick:v,onClick:f,onDrag:L,onLoad:y,onUnmount:b}){const C=o(M),[x,k]=r(null),[w,P]=r(null),[E,S]=r(null),[I,D]=r(null),[O,B]=r(null),[_,T]=r(null),[U,z]=r(null),[R,A]=r(null),[Z,V]=r(null),[W,N]=r(null),[j,H]=r(null),[G,$]=r(null);return l((()=>{null!==x&&x.setMap(C)}),[C]),l((()=>{void 0!==e&&null!==x&&x.setOptions(e)}),[x,e]),l((()=>{void 0!==t&&null!==x&&x.setDraggable(t)}),[x,t]),l((()=>{void 0!==n&&null!==x&&x.setEditable(n)}),[x,n]),l((()=>{void 0!==s&&null!==x&&x.setVisible(s)}),[x,s]),l((()=>{void 0!==i&&null!==x&&x.setPath(i)}),[x,i]),l((()=>{x&&a&&(null!==w&&google.maps.event.removeListener(w),P(google.maps.event.addListener(x,"dblclick",a)))}),[a]),l((()=>{x&&p&&(null!==E&&google.maps.event.removeListener(E),S(google.maps.event.addListener(x,"dragend",p)))}),[p]),l((()=>{x&&d&&(null!==I&&google.maps.event.removeListener(I),D(google.maps.event.addListener(x,"dragstart",d)))}),[d]),l((()=>{x&&h&&(null!==O&&google.maps.event.removeListener(O),B(google.maps.event.addListener(x,"mousedown",h)))}),[h]),l((()=>{x&&g&&(null!==_&&google.maps.event.removeListener(_),T(google.maps.event.addListener(x,"mousemove",g)))}),[g]),l((()=>{x&&u&&(null!==U&&google.maps.event.removeListener(U),z(google.maps.event.addListener(x,"mouseout",u)))}),[u]),l((()=>{x&&c&&(null!==R&&google.maps.event.removeListener(R),A(google.maps.event.addListener(x,"mouseover",c)))}),[c]),l((()=>{x&&m&&(null!==Z&&google.maps.event.removeListener(Z),V(google.maps.event.addListener(x,"mouseup",m)))}),[m]),l((()=>{x&&v&&(null!==W&&google.maps.event.removeListener(W),N(google.maps.event.addListener(x,"rightclick",v)))}),[v]),l((()=>{x&&f&&(null!==j&&google.maps.event.removeListener(j),H(google.maps.event.addListener(x,"click",f)))}),[f]),l((()=>{x&&L&&(null!==G&&google.maps.event.removeListener(G),$(google.maps.event.addListener(x,"drag",L)))}),[L]),l((()=>{const o=new google.maps.Polyline({...e||Et,map:C});return i&&o.setPath(i),void 0!==s&&o.setVisible(s),void 0!==n&&o.setEditable(n),void 0!==t&&o.setDraggable(t),a&&P(google.maps.event.addListener(o,"dblclick",a)),p&&S(google.maps.event.addListener(o,"dragend",p)),d&&D(google.maps.event.addListener(o,"dragstart",d)),h&&B(google.maps.event.addListener(o,"mousedown",h)),g&&T(google.maps.event.addListener(o,"mousemove",g)),u&&z(google.maps.event.addListener(o,"mouseout",u)),c&&A(google.maps.event.addListener(o,"mouseover",c)),m&&V(google.maps.event.addListener(o,"mouseup",m)),v&&N(google.maps.event.addListener(o,"rightclick",v)),f&&H(google.maps.event.addListener(o,"click",f)),L&&$(google.maps.event.addListener(o,"drag",L)),k(o),y&&y(o),()=>{null!==w&&google.maps.event.removeListener(w),null!==E&&google.maps.event.removeListener(E),null!==I&&google.maps.event.removeListener(I),null!==O&&google.maps.event.removeListener(O),null!==_&&google.maps.event.removeListener(_),null!==U&&google.maps.event.removeListener(U),null!==R&&google.maps.event.removeListener(R),null!==Z&&google.maps.event.removeListener(Z),null!==W&&google.maps.event.removeListener(W),null!==j&&google.maps.event.removeListener(j),b&&b(o),o.setMap(null)}}),[]),null}));class It extends p{static contextType=M;registeredEvents=[];state={polyline:null};setPolylineCallback=()=>{null!==this.state.polyline&&this.props.onLoad&&this.props.onLoad(this.state.polyline)};componentDidMount(){const e=new google.maps.Polyline({...this.props.options,map:this.context});this.registeredEvents=E({updaterMap:Pt,eventMap:wt,prevProps:{},nextProps:this.props,instance:e}),this.setState((function(){return{polyline:e}}),this.setPolylineCallback)}componentDidUpdate(e){null!==this.state.polyline&&(P(this.registeredEvents),this.registeredEvents=E({updaterMap:Pt,eventMap:wt,prevProps:e,nextProps:this.props,instance:this.state.polyline}))}componentWillUnmount(){null!==this.state.polyline&&(this.props.onUnmount&&this.props.onUnmount(this.state.polyline),P(this.registeredEvents),this.state.polyline.setMap(null))}render(){return null}}const Dt={onClick:"click",onDblClick:"dblclick",onDrag:"drag",onDragEnd:"dragend",onDragStart:"dragstart",onMouseDown:"mousedown",onMouseMove:"mousemove",onMouseOut:"mouseout",onMouseOver:"mouseover",onMouseUp:"mouseup",onRightClick:"rightclick"},Ot={draggable(e,t){e.setDraggable(t)},editable(e,t){e.setEditable(t)},map(e,t){e.setMap(t)},options(e,t){e.setOptions(t)},path(e,t){e.setPath(t)},paths(e,t){e.setPaths(t)},visible(e,t){e.setVisible(t)}};const Bt=i((function({options:e,draggable:t,editable:n,visible:s,path:i,paths:a,onDblClick:p,onDragEnd:d,onDragStart:h,onMouseDown:g,onMouseMove:u,onMouseOut:c,onMouseOver:m,onMouseUp:v,onRightClick:f,onClick:L,onDrag:y,onLoad:b,onUnmount:C,onEdit:x}){const k=o(M),[w,P]=r(null),[E,S]=r(null),[I,D]=r(null),[O,B]=r(null),[_,T]=r(null),[U,z]=r(null),[R,A]=r(null),[Z,V]=r(null),[W,N]=r(null),[j,H]=r(null),[G,$]=r(null),[F,K]=r(null);return l((()=>{null!==w&&w.setMap(k)}),[k]),l((()=>{void 0!==e&&null!==w&&w.setOptions(e)}),[w,e]),l((()=>{void 0!==t&&null!==w&&w.setDraggable(t)}),[w,t]),l((()=>{void 0!==n&&null!==w&&w.setEditable(n)}),[w,n]),l((()=>{void 0!==s&&null!==w&&w.setVisible(s)}),[w,s]),l((()=>{void 0!==i&&null!==w&&w.setPath(i)}),[w,i]),l((()=>{void 0!==a&&null!==w&&w.setPaths(a)}),[w,a]),l((()=>{w&&"function"==typeof p&&(null!==E&&google.maps.event.removeListener(E),S(google.maps.event.addListener(w,"dblclick",p)))}),[p]),l((()=>{w&&(google.maps.event.addListener(w.getPath(),"insert_at",(()=>{x?.(w)})),google.maps.event.addListener(w.getPath(),"set_at",(()=>{x?.(w)})),google.maps.event.addListener(w.getPath(),"remove_at",(()=>{x?.(w)})))}),[w,x]),l((()=>{w&&"function"==typeof d&&(null!==I&&google.maps.event.removeListener(I),D(google.maps.event.addListener(w,"dragend",d)))}),[d]),l((()=>{w&&"function"==typeof h&&(null!==O&&google.maps.event.removeListener(O),B(google.maps.event.addListener(w,"dragstart",h)))}),[h]),l((()=>{w&&"function"==typeof g&&(null!==_&&google.maps.event.removeListener(_),T(google.maps.event.addListener(w,"mousedown",g)))}),[g]),l((()=>{w&&"function"==typeof u&&(null!==U&&google.maps.event.removeListener(U),z(google.maps.event.addListener(w,"mousemove",u)))}),[u]),l((()=>{w&&"function"==typeof c&&(null!==R&&google.maps.event.removeListener(R),A(google.maps.event.addListener(w,"mouseout",c)))}),[c]),l((()=>{w&&"function"==typeof m&&(null!==Z&&google.maps.event.removeListener(Z),V(google.maps.event.addListener(w,"mouseover",m)))}),[m]),l((()=>{w&&"function"==typeof v&&(null!==W&&google.maps.event.removeListener(W),N(google.maps.event.addListener(w,"mouseup",v)))}),[v]),l((()=>{w&&"function"==typeof f&&(null!==j&&google.maps.event.removeListener(j),H(google.maps.event.addListener(w,"rightclick",f)))}),[f]),l((()=>{w&&"function"==typeof L&&(null!==G&&google.maps.event.removeListener(G),$(google.maps.event.addListener(w,"click",L)))}),[L]),l((()=>{w&&"function"==typeof y&&(null!==F&&google.maps.event.removeListener(F),K(google.maps.event.addListener(w,"drag",y)))}),[y]),l((()=>{const o=new google.maps.Polygon({...e,map:k});return i&&o.setPath(i),a&&o.setPaths(a),void 0!==s&&o.setVisible(s),void 0!==n&&o.setEditable(n),void 0!==t&&o.setDraggable(t),p&&S(google.maps.event.addListener(o,"dblclick",p)),d&&D(google.maps.event.addListener(o,"dragend",d)),h&&B(google.maps.event.addListener(o,"dragstart",h)),g&&T(google.maps.event.addListener(o,"mousedown",g)),u&&z(google.maps.event.addListener(o,"mousemove",u)),c&&A(google.maps.event.addListener(o,"mouseout",c)),m&&V(google.maps.event.addListener(o,"mouseover",m)),v&&N(google.maps.event.addListener(o,"mouseup",v)),f&&H(google.maps.event.addListener(o,"rightclick",f)),L&&$(google.maps.event.addListener(o,"click",L)),y&&K(google.maps.event.addListener(o,"drag",y)),P(o),b&&b(o),()=>{null!==E&&google.maps.event.removeListener(E),null!==I&&google.maps.event.removeListener(I),null!==O&&google.maps.event.removeListener(O),null!==_&&google.maps.event.removeListener(_),null!==U&&google.maps.event.removeListener(U),null!==R&&google.maps.event.removeListener(R),null!==Z&&google.maps.event.removeListener(Z),null!==W&&google.maps.event.removeListener(W),null!==j&&google.maps.event.removeListener(j),null!==G&&google.maps.event.removeListener(G),C&&C(o),o.setMap(null)}}),[]),null}));class _t extends p{static contextType=M;registeredEvents=[];polygon;componentDidMount(){const e=this.props.options||{};this.polygon=new google.maps.Polygon(e),this.polygon.setMap(this.context),this.registeredEvents=E({updaterMap:Ot,eventMap:Dt,prevProps:{},nextProps:this.props,instance:this.polygon}),this.props.onLoad&&this.props.onLoad(this.polygon)}componentDidUpdate(e){this.polygon&&(P(this.registeredEvents),this.registeredEvents=E({updaterMap:Ot,eventMap:Dt,prevProps:e,nextProps:this.props,instance:this.polygon}))}componentWillUnmount(){this.polygon&&(this.props.onUnmount&&this.props.onUnmount(this.polygon),P(this.registeredEvents),this.polygon&&this.polygon.setMap(null))}render(){return null}}const Tt={onBoundsChanged:"bounds_changed",onClick:"click",onDblClick:"dblclick",onDrag:"drag",onDragEnd:"dragend",onDragStart:"dragstart",onMouseDown:"mousedown",onMouseMove:"mousemove",onMouseOut:"mouseout",onMouseOver:"mouseover",onMouseUp:"mouseup",onRightClick:"rightclick"},Ut={bounds(e,t){e.setBounds(t)},draggable(e,t){e.setDraggable(t)},editable(e,t){e.setEditable(t)},map(e,t){e.setMap(t)},options(e,t){e.setOptions(t)},visible(e,t){e.setVisible(t)}};const zt=i((function({options:e,bounds:t,draggable:n,editable:s,visible:i,onDblClick:a,onDragEnd:p,onDragStart:d,onMouseDown:h,onMouseMove:g,onMouseOut:u,onMouseOver:c,onMouseUp:m,onRightClick:v,onClick:f,onDrag:L,onBoundsChanged:y,onLoad:b,onUnmount:C}){const x=o(M),[k,w]=r(null),[P,E]=r(null),[S,I]=r(null),[D,O]=r(null),[B,_]=r(null),[T,U]=r(null),[z,R]=r(null),[A,Z]=r(null),[V,W]=r(null),[N,j]=r(null),[H,G]=r(null),[$,F]=r(null),[K,Y]=r(null);return l((()=>{null!==k&&k.setMap(x)}),[x]),l((()=>{void 0!==e&&null!==k&&k.setOptions(e)}),[k,e]),l((()=>{void 0!==n&&null!==k&&k.setDraggable(n)}),[k,n]),l((()=>{void 0!==s&&null!==k&&k.setEditable(s)}),[k,s]),l((()=>{void 0!==i&&null!==k&&k.setVisible(i)}),[k,i]),l((()=>{void 0!==t&&null!==k&&k.setBounds(t)}),[k,t]),l((()=>{k&&a&&(null!==P&&google.maps.event.removeListener(P),E(google.maps.event.addListener(k,"dblclick",a)))}),[a]),l((()=>{k&&p&&(null!==S&&google.maps.event.removeListener(S),I(google.maps.event.addListener(k,"dragend",p)))}),[p]),l((()=>{k&&d&&(null!==D&&google.maps.event.removeListener(D),O(google.maps.event.addListener(k,"dragstart",d)))}),[d]),l((()=>{k&&h&&(null!==B&&google.maps.event.removeListener(B),_(google.maps.event.addListener(k,"mousedown",h)))}),[h]),l((()=>{k&&g&&(null!==T&&google.maps.event.removeListener(T),U(google.maps.event.addListener(k,"mousemove",g)))}),[g]),l((()=>{k&&u&&(null!==z&&google.maps.event.removeListener(z),R(google.maps.event.addListener(k,"mouseout",u)))}),[u]),l((()=>{k&&c&&(null!==A&&google.maps.event.removeListener(A),Z(google.maps.event.addListener(k,"mouseover",c)))}),[c]),l((()=>{k&&m&&(null!==V&&google.maps.event.removeListener(V),W(google.maps.event.addListener(k,"mouseup",m)))}),[m]),l((()=>{k&&v&&(null!==N&&google.maps.event.removeListener(N),j(google.maps.event.addListener(k,"rightclick",v)))}),[v]),l((()=>{k&&f&&(null!==H&&google.maps.event.removeListener(H),G(google.maps.event.addListener(k,"click",f)))}),[f]),l((()=>{k&&L&&(null!==$&&google.maps.event.removeListener($),F(google.maps.event.addListener(k,"drag",L)))}),[L]),l((()=>{k&&y&&(null!==K&&google.maps.event.removeListener(K),Y(google.maps.event.addListener(k,"bounds_changed",y)))}),[y]),l((()=>{const o=new google.maps.Rectangle({...e,map:x});return void 0!==i&&o.setVisible(i),void 0!==s&&o.setEditable(s),void 0!==n&&o.setDraggable(n),void 0!==t&&o.setBounds(t),a&&E(google.maps.event.addListener(o,"dblclick",a)),p&&I(google.maps.event.addListener(o,"dragend",p)),d&&O(google.maps.event.addListener(o,"dragstart",d)),h&&_(google.maps.event.addListener(o,"mousedown",h)),g&&U(google.maps.event.addListener(o,"mousemove",g)),u&&R(google.maps.event.addListener(o,"mouseout",u)),c&&Z(google.maps.event.addListener(o,"mouseover",c)),m&&W(google.maps.event.addListener(o,"mouseup",m)),v&&j(google.maps.event.addListener(o,"rightclick",v)),f&&G(google.maps.event.addListener(o,"click",f)),L&&F(google.maps.event.addListener(o,"drag",L)),y&&Y(google.maps.event.addListener(o,"bounds_changed",y)),w(o),b&&b(o),()=>{null!==P&&google.maps.event.removeListener(P),null!==S&&google.maps.event.removeListener(S),null!==D&&google.maps.event.removeListener(D),null!==B&&google.maps.event.removeListener(B),null!==T&&google.maps.event.removeListener(T),null!==z&&google.maps.event.removeListener(z),null!==A&&google.maps.event.removeListener(A),null!==V&&google.maps.event.removeListener(V),null!==N&&google.maps.event.removeListener(N),null!==H&&google.maps.event.removeListener(H),null!==$&&google.maps.event.removeListener($),null!==K&&google.maps.event.removeListener(K),C&&C(o),o.setMap(null)}}),[]),null}));class Rt extends p{static contextType=M;registeredEvents=[];state={rectangle:null};setRectangleCallback=()=>{null!==this.state.rectangle&&this.props.onLoad&&this.props.onLoad(this.state.rectangle)};componentDidMount(){const e=new google.maps.Rectangle({...this.props.options,map:this.context});this.registeredEvents=E({updaterMap:Ut,eventMap:Tt,prevProps:{},nextProps:this.props,instance:e}),this.setState((function(){return{rectangle:e}}),this.setRectangleCallback)}componentDidUpdate(e){null!==this.state.rectangle&&(P(this.registeredEvents),this.registeredEvents=E({updaterMap:Ut,eventMap:Tt,prevProps:e,nextProps:this.props,instance:this.state.rectangle}))}componentWillUnmount(){null!==this.state.rectangle&&(this.props.onUnmount&&this.props.onUnmount(this.state.rectangle),P(this.registeredEvents),this.state.rectangle.setMap(null))}render(){return null}}const At={onCenterChanged:"center_changed",onRadiusChanged:"radius_changed",onClick:"click",onDblClick:"dblclick",onDrag:"drag",onDragEnd:"dragend",onDragStart:"dragstart",onMouseDown:"mousedown",onMouseMove:"mousemove",onMouseOut:"mouseout",onMouseOver:"mouseover",onMouseUp:"mouseup",onRightClick:"rightclick"},Zt={center(e,t){e.setCenter(t)},draggable(e,t){e.setDraggable(t)},editable(e,t){e.setEditable(t)},map(e,t){e.setMap(t)},options(e,t){e.setOptions(t)},radius(e,t){e.setRadius(t)},visible(e,t){e.setVisible(t)}},Vt={};const Wt=i((function({options:e,center:t,radius:n,draggable:s,editable:i,visible:a,onDblClick:p,onDragEnd:d,onDragStart:h,onMouseDown:g,onMouseMove:u,onMouseOut:c,onMouseOver:m,onMouseUp:v,onRightClick:f,onClick:L,onDrag:y,onCenterChanged:b,onRadiusChanged:C,onLoad:x,onUnmount:k}){const w=o(M),[P,E]=r(null),[S,I]=r(null),[D,O]=r(null),[B,_]=r(null),[T,U]=r(null),[z,R]=r(null),[A,Z]=r(null),[V,W]=r(null),[N,j]=r(null),[H,G]=r(null),[$,F]=r(null),[K,Y]=r(null),[q,J]=r(null),[X,Q]=r(null);return l((()=>{null!==P&&P.setMap(w)}),[w]),l((()=>{void 0!==e&&null!==P&&P.setOptions(e)}),[P,e]),l((()=>{void 0!==s&&null!==P&&P.setDraggable(s)}),[P,s]),l((()=>{void 0!==i&&null!==P&&P.setEditable(i)}),[P,i]),l((()=>{void 0!==a&&null!==P&&P.setVisible(a)}),[P,a]),l((()=>{"number"==typeof n&&null!==P&&P.setRadius(n)}),[P,n]),l((()=>{void 0!==t&&null!==P&&P.setCenter(t)}),[P,t]),l((()=>{P&&p&&(null!==S&&google.maps.event.removeListener(S),I(google.maps.event.addListener(P,"dblclick",p)))}),[p]),l((()=>{P&&d&&(null!==D&&google.maps.event.removeListener(D),O(google.maps.event.addListener(P,"dragend",d)))}),[d]),l((()=>{P&&h&&(null!==B&&google.maps.event.removeListener(B),_(google.maps.event.addListener(P,"dragstart",h)))}),[h]),l((()=>{P&&g&&(null!==T&&google.maps.event.removeListener(T),U(google.maps.event.addListener(P,"mousedown",g)))}),[g]),l((()=>{P&&u&&(null!==z&&google.maps.event.removeListener(z),R(google.maps.event.addListener(P,"mousemove",u)))}),[u]),l((()=>{P&&c&&(null!==A&&google.maps.event.removeListener(A),Z(google.maps.event.addListener(P,"mouseout",c)))}),[c]),l((()=>{P&&m&&(null!==V&&google.maps.event.removeListener(V),W(google.maps.event.addListener(P,"mouseover",m)))}),[m]),l((()=>{P&&v&&(null!==N&&google.maps.event.removeListener(N),j(google.maps.event.addListener(P,"mouseup",v)))}),[v]),l((()=>{P&&f&&(null!==H&&google.maps.event.removeListener(H),G(google.maps.event.addListener(P,"rightclick",f)))}),[f]),l((()=>{P&&L&&(null!==$&&google.maps.event.removeListener($),F(google.maps.event.addListener(P,"click",L)))}),[L]),l((()=>{P&&y&&(null!==K&&google.maps.event.removeListener(K),Y(google.maps.event.addListener(P,"drag",y)))}),[y]),l((()=>{P&&b&&(null!==q&&google.maps.event.removeListener(q),J(google.maps.event.addListener(P,"center_changed",b)))}),[L]),l((()=>{P&&C&&(null!==X&&google.maps.event.removeListener(X),Q(google.maps.event.addListener(P,"radius_changed",C)))}),[C]),l((()=>{const o=new google.maps.Circle({...e||Vt,map:w});return"number"==typeof n&&o.setRadius(n),void 0!==t&&o.setCenter(t),"number"==typeof n&&o.setRadius(n),void 0!==a&&o.setVisible(a),void 0!==i&&o.setEditable(i),void 0!==s&&o.setDraggable(s),p&&I(google.maps.event.addListener(o,"dblclick",p)),d&&O(google.maps.event.addListener(o,"dragend",d)),h&&_(google.maps.event.addListener(o,"dragstart",h)),g&&U(google.maps.event.addListener(o,"mousedown",g)),u&&R(google.maps.event.addListener(o,"mousemove",u)),c&&Z(google.maps.event.addListener(o,"mouseout",c)),m&&W(google.maps.event.addListener(o,"mouseover",m)),v&&j(google.maps.event.addListener(o,"mouseup",v)),f&&G(google.maps.event.addListener(o,"rightclick",f)),L&&F(google.maps.event.addListener(o,"click",L)),y&&Y(google.maps.event.addListener(o,"drag",y)),b&&J(google.maps.event.addListener(o,"center_changed",b)),C&&Q(google.maps.event.addListener(o,"radius_changed",C)),E(o),x&&x(o),()=>{null!==S&&google.maps.event.removeListener(S),null!==D&&google.maps.event.removeListener(D),null!==B&&google.maps.event.removeListener(B),null!==T&&google.maps.event.removeListener(T),null!==z&&google.maps.event.removeListener(z),null!==A&&google.maps.event.removeListener(A),null!==V&&google.maps.event.removeListener(V),null!==N&&google.maps.event.removeListener(N),null!==H&&google.maps.event.removeListener(H),null!==$&&google.maps.event.removeListener($),null!==q&&google.maps.event.removeListener(q),null!==X&&google.maps.event.removeListener(X),k&&k(o),o.setMap(null)}}),[]),null}));class Nt extends p{static contextType=M;registeredEvents=[];state={circle:null};setCircleCallback=()=>{null!==this.state.circle&&this.props.onLoad&&this.props.onLoad(this.state.circle)};componentDidMount(){const e=new google.maps.Circle({...this.props.options,map:this.context});this.registeredEvents=E({updaterMap:Zt,eventMap:At,prevProps:{},nextProps:this.props,instance:e}),this.setState((function(){return{circle:e}}),this.setCircleCallback)}componentDidUpdate(e){null!==this.state.circle&&(P(this.registeredEvents),this.registeredEvents=E({updaterMap:Zt,eventMap:At,prevProps:e,nextProps:this.props,instance:this.state.circle}))}componentWillUnmount(){null!==this.state.circle&&(this.props.onUnmount&&this.props.onUnmount(this.state.circle),P(this.registeredEvents),this.state.circle?.setMap(null))}render(){return null}}const jt={onClick:"click",onDblClick:"dblclick",onMouseDown:"mousedown",onMouseOut:"mouseout",onMouseOver:"mouseover",onMouseUp:"mouseup",onRightClick:"rightclick",onAddFeature:"addfeature",onRemoveFeature:"removefeature",onRemoveProperty:"removeproperty",onSetGeometry:"setgeometry",onSetProperty:"setproperty"},Ht={add(e,t){e.add(t)},addgeojson(e,t,n){e.addGeoJson(t,n)},contains(e,t){e.contains(t)},foreach(e,t){e.forEach(t)},loadgeojson(e,t,n,s){e.loadGeoJson(t,n,s)},overridestyle(e,t,n){e.overrideStyle(t,n)},remove(e,t){e.remove(t)},revertstyle(e,t){e.revertStyle(t)},controlposition(e,t){e.setControlPosition(t)},controls(e,t){e.setControls(t)},drawingmode(e,t){e.setDrawingMode(t)},map(e,t){e.setMap(t)},style(e,t){e.setStyle(t)},togeojson(e,t){e.toGeoJson(t)}};const Gt=i((function({options:e,onClick:t,onDblClick:n,onMouseDown:s,onMouseMove:i,onMouseOut:a,onMouseOver:p,onMouseUp:d,onRightClick:h,onAddFeature:g,onRemoveFeature:u,onRemoveProperty:c,onSetGeometry:m,onSetProperty:v,onLoad:f,onUnmount:L}){const y=o(M),[b,C]=r(null),[x,k]=r(null),[w,P]=r(null),[E,S]=r(null),[I,D]=r(null),[O,B]=r(null),[_,T]=r(null),[U,z]=r(null),[R,A]=r(null),[Z,V]=r(null),[W,N]=r(null),[j,H]=r(null),[G,$]=r(null),[F,K]=r(null);return l((()=>{null!==b&&b.setMap(y)}),[y]),l((()=>{b&&n&&(null!==x&&google.maps.event.removeListener(x),k(google.maps.event.addListener(b,"dblclick",n)))}),[n]),l((()=>{b&&s&&(null!==w&&google.maps.event.removeListener(w),P(google.maps.event.addListener(b,"mousedown",s)))}),[s]),l((()=>{b&&i&&(null!==E&&google.maps.event.removeListener(E),S(google.maps.event.addListener(b,"mousemove",i)))}),[i]),l((()=>{b&&a&&(null!==I&&google.maps.event.removeListener(I),D(google.maps.event.addListener(b,"mouseout",a)))}),[a]),l((()=>{b&&p&&(null!==O&&google.maps.event.removeListener(O),B(google.maps.event.addListener(b,"mouseover",p)))}),[p]),l((()=>{b&&d&&(null!==_&&google.maps.event.removeListener(_),T(google.maps.event.addListener(b,"mouseup",d)))}),[d]),l((()=>{b&&h&&(null!==U&&google.maps.event.removeListener(U),z(google.maps.event.addListener(b,"rightclick",h)))}),[h]),l((()=>{b&&t&&(null!==R&&google.maps.event.removeListener(R),A(google.maps.event.addListener(b,"click",t)))}),[t]),l((()=>{b&&g&&(null!==Z&&google.maps.event.removeListener(Z),V(google.maps.event.addListener(b,"addfeature",g)))}),[g]),l((()=>{b&&u&&(null!==W&&google.maps.event.removeListener(W),N(google.maps.event.addListener(b,"removefeature",u)))}),[u]),l((()=>{b&&c&&(null!==j&&google.maps.event.removeListener(j),H(google.maps.event.addListener(b,"removeproperty",c)))}),[c]),l((()=>{b&&m&&(null!==G&&google.maps.event.removeListener(G),$(google.maps.event.addListener(b,"setgeometry",m)))}),[m]),l((()=>{b&&v&&(null!==F&&google.maps.event.removeListener(F),K(google.maps.event.addListener(b,"setproperty",v)))}),[v]),l((()=>{if(null!==y){const o=new google.maps.Data({...e,map:y});n&&k(google.maps.event.addListener(o,"dblclick",n)),s&&P(google.maps.event.addListener(o,"mousedown",s)),i&&S(google.maps.event.addListener(o,"mousemove",i)),a&&D(google.maps.event.addListener(o,"mouseout",a)),p&&B(google.maps.event.addListener(o,"mouseover",p)),d&&T(google.maps.event.addListener(o,"mouseup",d)),h&&z(google.maps.event.addListener(o,"rightclick",h)),t&&A(google.maps.event.addListener(o,"click",t)),g&&V(google.maps.event.addListener(o,"addfeature",g)),u&&N(google.maps.event.addListener(o,"removefeature",u)),c&&H(google.maps.event.addListener(o,"removeproperty",c)),m&&$(google.maps.event.addListener(o,"setgeometry",m)),v&&K(google.maps.event.addListener(o,"setproperty",v)),C(o),f&&f(o)}return()=>{b&&(null!==x&&google.maps.event.removeListener(x),null!==w&&google.maps.event.removeListener(w),null!==E&&google.maps.event.removeListener(E),null!==I&&google.maps.event.removeListener(I),null!==O&&google.maps.event.removeListener(O),null!==_&&google.maps.event.removeListener(_),null!==U&&google.maps.event.removeListener(U),null!==R&&google.maps.event.removeListener(R),null!==Z&&google.maps.event.removeListener(Z),null!==W&&google.maps.event.removeListener(W),null!==j&&google.maps.event.removeListener(j),null!==G&&google.maps.event.removeListener(G),null!==F&&google.maps.event.removeListener(F),L&&L(b),b.setMap(null))}}),[]),null}));class $t extends p{static contextType=M;registeredEvents=[];state={data:null};setDataCallback=()=>{null!==this.state.data&&this.props.onLoad&&this.props.onLoad(this.state.data)};componentDidMount(){if(null!==this.context){const e=new google.maps.Data({...this.props.options,map:this.context});this.registeredEvents=E({updaterMap:Ht,eventMap:jt,prevProps:{},nextProps:this.props,instance:e}),this.setState((()=>({data:e})),this.setDataCallback)}}componentDidUpdate(e){null!==this.state.data&&(P(this.registeredEvents),this.registeredEvents=E({updaterMap:Ht,eventMap:jt,prevProps:e,nextProps:this.props,instance:this.state.data}))}componentWillUnmount(){null!==this.state.data&&(this.props.onUnmount&&this.props.onUnmount(this.state.data),P(this.registeredEvents),this.state.data&&this.state.data.setMap(null))}render(){return null}}const Ft={onClick:"click",onDefaultViewportChanged:"defaultviewport_changed",onStatusChanged:"status_changed"},Kt={options(e,t){e.setOptions(t)},url(e,t){e.setUrl(t)},zIndex(e,t){e.setZIndex(t)}};class Yt extends p{static contextType=M;registeredEvents=[];state={kmlLayer:null};setKmlLayerCallback=()=>{null!==this.state.kmlLayer&&this.props.onLoad&&this.props.onLoad(this.state.kmlLayer)};componentDidMount(){const e=new google.maps.KmlLayer({...this.props.options,map:this.context});this.registeredEvents=E({updaterMap:Kt,eventMap:Ft,prevProps:{},nextProps:this.props,instance:e}),this.setState((function(){return{kmlLayer:e}}),this.setKmlLayerCallback)}componentDidUpdate(e){null!==this.state.kmlLayer&&(P(this.registeredEvents),this.registeredEvents=E({updaterMap:Kt,eventMap:Ft,prevProps:e,nextProps:this.props,instance:this.state.kmlLayer}))}componentWillUnmount(){null!==this.state.kmlLayer&&(this.props.onUnmount&&this.props.onUnmount(this.state.kmlLayer),P(this.registeredEvents),this.state.kmlLayer.setMap(null))}render(){return null}}function qt(e,t){return"function"==typeof t?t(e.offsetWidth,e.offsetHeight):{x:0,y:0}}function Jt(e,t){return new t(e.lat,e.lng)}function Xt(e,t){return new t(new google.maps.LatLng(e.ne.lat,e.ne.lng),new google.maps.LatLng(e.sw.lat,e.sw.lng))}function Qt(e,t,n,s){return void 0!==n?function(e,t,n){const s=e&&e.fromLatLngToDivPixel(n.getNorthEast()),o=e&&e.fromLatLngToDivPixel(n.getSouthWest());return s&&o?{left:`${o.x+t.x}px`,top:`${s.y+t.y}px`,width:s.x-o.x-t.x+"px",height:o.y-s.y-t.y+"px"}:{left:"-9999px",top:"-9999px"}}(e,t,(o=n,i=google.maps.LatLngBounds,r=Xt,o instanceof i?o:r(o,i))):function(e,t,n){const s=e&&e.fromLatLngToDivPixel(n);if(s){const{x:e,y:n}=s;return{left:`${e+t.x}px`,top:`${n+t.y}px`}}return{left:"-9999px",top:"-9999px"}}(e,t,function(e,t,n){return e instanceof t?e:n(e,t)}(s,google.maps.LatLng,Jt));var o,i,r}function en(e){if(!e)return"";return(e instanceof google.maps.LatLng?e:new google.maps.LatLng(e.lat,e.lng))+""}function tn(e){if(!e)return"";return(e instanceof google.maps.LatLngBounds?e:new google.maps.LatLngBounds(new google.maps.LatLng(e.south,e.east),new google.maps.LatLng(e.north,e.west)))+""}const nn="floatPane",sn="mapPane",on="markerLayer",rn="overlayLayer",an="overlayMouseTarget";const ln=i((function({position:e,bounds:t,mapPaneName:n,zIndex:s,onLoad:i,onUnmount:r,getPixelPositionOffset:a,children:p}){const d=o(M),g=h((()=>{const e=document.createElement("div");return e.style.position="absolute",e}),[]),u=h((()=>function(e,t,n,s,o){class i extends google.maps.OverlayView{container;pane;position;bounds;constructor(e,t,n,s){super(),this.container=e,this.pane=t,this.position=n,this.bounds=s}onAdd(){const e=this.getPanes()?.[this.pane];e?.appendChild(this.container)}draw(){const e=Qt(this.getProjection(),{...this.container?qt(this.container,o):{x:0,y:0}},this.bounds,this.position);for(const[t,n]of Object.entries(e))this.container.style[t]=n}onRemove(){null!==this.container.parentNode&&this.container.parentNode.removeChild(this.container)}}return new i(e,t,n,s)}(g,n,e,t,a)),[g,n,e,t]);return l((()=>(i?.(u),u?.setMap(d),()=>{r?.(u),u?.setMap(null)})),[d,u]),l((()=>{g.style.zIndex=`${s}`}),[s,g]),m.createPortal(p,g)}));class pn extends p{static FLOAT_PANE="floatPane";static MAP_PANE="mapPane";static MARKER_LAYER="markerLayer";static OVERLAY_LAYER="overlayLayer";static OVERLAY_MOUSE_TARGET="overlayMouseTarget";static contextType=M;state={paneEl:null,containerStyle:{position:"absolute"}};overlayView;containerRef;updatePane=()=>{const e=this.props.mapPaneName,t=this.overlayView.getPanes();b(!!e,"OverlayView requires props.mapPaneName but got %s",e),t?this.setState({paneEl:t[e]}):this.setState({paneEl:null})};onAdd=()=>{this.updatePane(),this.props.onLoad?.(this.overlayView)};onPositionElement=()=>{const e=Qt(this.overlayView.getProjection(),{x:0,y:0,...this.containerRef.current?qt(this.containerRef.current,this.props.getPixelPositionOffset):{}},this.props.bounds,this.props.position);var t,n;t=e,n={left:this.state.containerStyle.left,top:this.state.containerStyle.top,width:this.state.containerStyle.width,height:this.state.containerStyle.height},(t.left!==n.left||t.top!==n.top||t.width!==n.height||t.height!==n.height)&&this.setState({containerStyle:{top:e.top??0,left:e.left??0,width:e.width??0,height:e.height??0,position:"absolute"}})};draw=()=>{this.onPositionElement()};onRemove=()=>{this.setState((()=>({paneEl:null}))),this.props.onUnmount?.(this.overlayView)};constructor(e){super(e),this.containerRef=d();const t=new google.maps.OverlayView;t.onAdd=this.onAdd,t.draw=this.draw,t.onRemove=this.onRemove,this.overlayView=t}componentDidMount(){this.overlayView.setMap(this.context)}componentDidUpdate(e){const t=en(e.position),n=en(this.props.position),s=tn(e.bounds),o=tn(this.props.bounds);t===n&&s===o||this.overlayView.draw(),e.mapPaneName!==this.props.mapPaneName&&this.updatePane()}componentWillUnmount(){this.overlayView.setMap(null)}render(){const t=this.state.paneEl;return t?m.createPortal(e("div",{ref:this.containerRef,style:this.state.containerStyle,children:g.only(this.props.children)}),t):null}}function dn(){}const hn={onDblClick:"dblclick",onClick:"click"},gn={opacity(e,t){e.setOpacity(t)}};const un=i((function({url:e,bounds:t,options:n,visible:s}){const i=o(M),r=new google.maps.LatLngBounds(new google.maps.LatLng(t.south,t.west),new google.maps.LatLng(t.north,t.east)),a=h((()=>new google.maps.GroundOverlay(e,r,n)),[]);return l((()=>{null!==a&&a.setMap(i)}),[i]),l((()=>{void 0!==e&&null!==a&&(a.set("url",e),a.setMap(i))}),[a,e]),l((()=>{void 0!==s&&null!==a&&a.setOpacity(s?1:0)}),[a,s]),l((()=>{const e=new google.maps.LatLngBounds(new google.maps.LatLng(t.south,t.west),new google.maps.LatLng(t.north,t.east));void 0!==t&&null!==a&&(a.set("bounds",e),a.setMap(i))}),[a,t]),null}));class cn extends p{static defaultProps={onLoad:dn};static contextType=M;registeredEvents=[];state={groundOverlay:null};setGroundOverlayCallback=()=>{null!==this.state.groundOverlay&&this.props.onLoad&&this.props.onLoad(this.state.groundOverlay)};componentDidMount(){b(!!this.props.url||!!this.props.bounds,"For GroundOverlay, url and bounds are passed in to constructor and are immutable after instantiated. This is the behavior of Google Maps JavaScript API v3 ( See https://developers.google.com/maps/documentation/javascript/reference#GroundOverlay) Hence, use the corresponding two props provided by `react-google-maps-api`, url and bounds. In some cases, you'll need the GroundOverlay component to reflect the changes of url and bounds. You can leverage the React's key property to remount the component. Typically, just `key={url}` would serve your need. See https://github.com/tomchentw/react-google-maps/issues/655");const e=new google.maps.GroundOverlay(this.props.url,this.props.bounds,{...this.props.options,map:this.context});this.registeredEvents=E({updaterMap:gn,eventMap:hn,prevProps:{},nextProps:this.props,instance:e}),this.setState((function(){return{groundOverlay:e}}),this.setGroundOverlayCallback)}componentDidUpdate(e){null!==this.state.groundOverlay&&(P(this.registeredEvents),this.registeredEvents=E({updaterMap:gn,eventMap:hn,prevProps:e,nextProps:this.props,instance:this.state.groundOverlay}))}componentWillUnmount(){this.state.groundOverlay&&(this.props.onUnmount&&this.props.onUnmount(this.state.groundOverlay),this.state.groundOverlay.setMap(null))}render(){return null}}const mn={},vn={data(e,t){e.setData(t)},map(e,t){e.setMap(t)},options(e,t){e.setOptions(t)}};const fn=i((function({data:e,onLoad:t,onUnmount:n,options:s}){const i=o(M),[a,p]=r(null);return l((()=>{google.maps.visualization||b(!!google.maps.visualization,'Did you include prop libraries={["visualization"]} in useJsApiScript? %s',google.maps.visualization)}),[]),l((()=>{b(!!e,"data property is required in HeatmapLayer %s",e)}),[e]),l((()=>{null!==a&&a.setMap(i)}),[i]),l((()=>{s&&null!==a&&a.setOptions(s)}),[a,s]),l((()=>{const o=new google.maps.visualization.HeatmapLayer({...s,data:e,map:i});return p(o),t&&t(o),()=>{null!==a&&(n&&n(a),a.setMap(null))}}),[]),null}));class Ln extends p{static contextType=M;registeredEvents=[];state={heatmapLayer:null};setHeatmapLayerCallback=()=>{null!==this.state.heatmapLayer&&this.props.onLoad&&this.props.onLoad(this.state.heatmapLayer)};componentDidMount(){b(!!google.maps.visualization,'Did you include prop libraries={["visualization"]} to <LoadScript />? %s',google.maps.visualization),b(!!this.props.data,"data property is required in HeatmapLayer %s",this.props.data);const e=new google.maps.visualization.HeatmapLayer({...this.props.options,data:this.props.data,map:this.context});this.registeredEvents=E({updaterMap:vn,eventMap:mn,prevProps:{},nextProps:this.props,instance:e}),this.setState((function(){return{heatmapLayer:e}}),this.setHeatmapLayerCallback)}componentDidUpdate(e){P(this.registeredEvents),this.registeredEvents=E({updaterMap:vn,eventMap:mn,prevProps:e,nextProps:this.props,instance:this.state.heatmapLayer})}componentWillUnmount(){null!==this.state.heatmapLayer&&(this.props.onUnmount&&this.props.onUnmount(this.state.heatmapLayer),P(this.registeredEvents),this.state.heatmapLayer.setMap(null))}render(){return null}}const yn={onCloseClick:"closeclick",onPanoChanged:"pano_changed",onPositionChanged:"position_changed",onPovChanged:"pov_changed",onResize:"resize",onStatusChanged:"status_changed",onVisibleChanged:"visible_changed",onZoomChanged:"zoom_changed"},bn={register(e,t,n){e.registerPanoProvider(t,n)},links(e,t){e.setLinks(t)},motionTracking(e,t){e.setMotionTracking(t)},options(e,t){e.setOptions(t)},pano(e,t){e.setPano(t)},position(e,t){e.setPosition(t)},pov(e,t){e.setPov(t)},visible(e,t){e.setVisible(t)},zoom(e,t){e.setZoom(t)}};class Mn extends p{static contextType=M;registeredEvents=[];state={streetViewPanorama:null};setStreetViewPanoramaCallback=()=>{null!==this.state.streetViewPanorama&&this.props.onLoad&&this.props.onLoad(this.state.streetViewPanorama)};componentDidMount(){const e=this.context?.getStreetView()??null;this.registeredEvents=E({updaterMap:bn,eventMap:yn,prevProps:{},nextProps:this.props,instance:e}),this.setState((()=>({streetViewPanorama:e})),this.setStreetViewPanoramaCallback)}componentDidUpdate(e){null!==this.state.streetViewPanorama&&(P(this.registeredEvents),this.registeredEvents=E({updaterMap:bn,eventMap:yn,prevProps:e,nextProps:this.props,instance:this.state.streetViewPanorama}))}componentWillUnmount(){null!==this.state.streetViewPanorama&&(this.props.onUnmount&&this.props.onUnmount(this.state.streetViewPanorama),P(this.registeredEvents),this.state.streetViewPanorama.setVisible(!1))}render(){return null}}class Cn extends p{static contextType=M;state={streetViewService:null};setStreetViewServiceCallback=()=>{null!==this.state.streetViewService&&this.props.onLoad&&this.props.onLoad(this.state.streetViewService)};componentDidMount(){const e=new google.maps.StreetViewService;this.setState((function(){return{streetViewService:e}}),this.setStreetViewServiceCallback)}componentWillUnmount(){null!==this.state.streetViewService&&this.props.onUnmount&&this.props.onUnmount(this.state.streetViewService)}render(){return null}}class xn extends p{state={directionsService:null};setDirectionsServiceCallback=()=>{null!==this.state.directionsService&&this.props.onLoad&&this.props.onLoad(this.state.directionsService)};componentDidMount(){b(!!this.props.options,"DirectionsService expected options object as parameter, but got %s",this.props.options);const e=new google.maps.DirectionsService;this.setState((function(){return{directionsService:e}}),this.setDirectionsServiceCallback)}componentDidUpdate(){null!==this.state.directionsService&&this.state.directionsService.route(this.props.options,this.props.callback)}componentWillUnmount(){null!==this.state.directionsService&&this.props.onUnmount&&this.props.onUnmount(this.state.directionsService)}render(){return null}}const kn={onDirectionsChanged:"directions_changed"},wn={directions(e,t){e.setDirections(t)},map(e,t){e.setMap(t)},options(e,t){e.setOptions(t)},panel(e,t){e.setPanel(t)},routeIndex(e,t){e.setRouteIndex(t)}};class Pn extends p{static contextType=M;registeredEvents=[];state={directionsRenderer:null};setDirectionsRendererCallback=()=>{null!==this.state.directionsRenderer&&(this.state.directionsRenderer.setMap(this.context),this.props.onLoad&&this.props.onLoad(this.state.directionsRenderer))};componentDidMount(){const e=new google.maps.DirectionsRenderer(this.props.options);this.registeredEvents=E({updaterMap:wn,eventMap:kn,prevProps:{},nextProps:this.props,instance:e}),this.setState((function(){return{directionsRenderer:e}}),this.setDirectionsRendererCallback)}componentDidUpdate(e){null!==this.state.directionsRenderer&&(P(this.registeredEvents),this.registeredEvents=E({updaterMap:wn,eventMap:kn,prevProps:e,nextProps:this.props,instance:this.state.directionsRenderer}))}componentWillUnmount(){null!==this.state.directionsRenderer&&(this.props.onUnmount&&this.props.onUnmount(this.state.directionsRenderer),P(this.registeredEvents),this.state.directionsRenderer&&this.state.directionsRenderer.setMap(null))}render(){return null}}class En extends p{state={distanceMatrixService:null};setDistanceMatrixServiceCallback=()=>{null!==this.state.distanceMatrixService&&this.props.onLoad&&this.props.onLoad(this.state.distanceMatrixService)};componentDidMount(){b(!!this.props.options,"DistanceMatrixService expected options object as parameter, but go %s",this.props.options);const e=new google.maps.DistanceMatrixService;this.setState((function(){return{distanceMatrixService:e}}),this.setDistanceMatrixServiceCallback)}componentDidUpdate(){null!==this.state.distanceMatrixService&&this.state.distanceMatrixService.getDistanceMatrix(this.props.options,this.props.callback)}componentWillUnmount(){null!==this.state.distanceMatrixService&&this.props.onUnmount&&this.props.onUnmount(this.state.distanceMatrixService)}render(){return null}}const Sn={onPlacesChanged:"places_changed"},In={bounds(e,t){e.setBounds(t)}};class Dn extends p{static contextType=M;registeredEvents=[];containerElement=d();state={searchBox:null};setSearchBoxCallback=()=>{null!==this.state.searchBox&&this.props.onLoad&&this.props.onLoad(this.state.searchBox)};componentDidMount(){if(b(!!google.maps.places,'You need to provide libraries={["places"]} prop to <LoadScript /> component %s',google.maps.places),null!==this.containerElement&&null!==this.containerElement.current){const e=this.containerElement.current.querySelector("input");if(null!==e){const t=new google.maps.places.SearchBox(e,this.props.options);this.registeredEvents=E({updaterMap:In,eventMap:Sn,prevProps:{},nextProps:this.props,instance:t}),this.setState((function(){return{searchBox:t}}),this.setSearchBoxCallback)}}}componentDidUpdate(e){null!==this.state.searchBox&&(P(this.registeredEvents),this.registeredEvents=E({updaterMap:In,eventMap:Sn,prevProps:e,nextProps:this.props,instance:this.state.searchBox}))}componentWillUnmount(){null!==this.state.searchBox&&(this.props.onUnmount&&this.props.onUnmount(this.state.searchBox),P(this.registeredEvents))}render(){return e("div",{ref:this.containerElement,children:g.only(this.props.children)})}}const On={onPlaceChanged:"place_changed"},Bn={bounds(e,t){e.setBounds(t)},restrictions(e,t){e.setComponentRestrictions(t)},fields(e,t){e.setFields(t)},options(e,t){e.setOptions(t)},types(e,t){e.setTypes(t)}};class _n extends p{static defaultProps={className:""};static contextType=M;registeredEvents=[];containerElement=d();state={autocomplete:null};setAutocompleteCallback=()=>{null!==this.state.autocomplete&&this.props.onLoad&&this.props.onLoad(this.state.autocomplete)};componentDidMount(){b(!!google.maps.places,'You need to provide libraries={["places"]} prop to <LoadScript /> component %s',google.maps.places);const e=this.containerElement.current?.querySelector("input");if(e){const t=new google.maps.places.Autocomplete(e,this.props.options);this.registeredEvents=E({updaterMap:Bn,eventMap:On,prevProps:{},nextProps:this.props,instance:t}),this.setState((()=>({autocomplete:t})),this.setAutocompleteCallback)}}componentDidUpdate(e){P(this.registeredEvents),this.registeredEvents=E({updaterMap:Bn,eventMap:On,prevProps:e,nextProps:this.props,instance:this.state.autocomplete})}componentWillUnmount(){null!==this.state.autocomplete&&P(this.registeredEvents)}render(){return e("div",{ref:this.containerElement,className:this.props.className,children:g.only(this.props.children)})}}export{_n as Autocomplete,oe as BicyclingLayer,se as BicyclingLayerF,Nt as Circle,Wt as CircleF,$t as Data,Gt as DataF,Pn as DirectionsRenderer,xn as DirectionsService,En as DistanceMatrixService,de as DrawingManager,pe as DrawingManagerF,nn as FLOAT_PANE,D as GoogleMap,yt as GoogleMapsMarkerClusterer,bt as GoogleMarkerClusterer,cn as GroundOverlay,un as GroundOverlayF,Ln as HeatmapLayer,fn as HeatmapLayerF,Be as InfoBox,Oe as InfoBoxF,kt as InfoWindow,xt as InfoWindowF,Yt as KmlLayer,Z as LoadScript,j as LoadScriptNext,sn as MAP_PANE,on as MARKER_LAYER,M as MapContext,me as Marker,we as MarkerClusterer,ke as MarkerClustererF,ce as MarkerF,rn as OVERLAY_LAYER,an as OVERLAY_MOUSE_TARGET,pn as OverlayView,ln as OverlayViewF,_t as Polygon,Bt as PolygonF,It as Polyline,St as PolylineF,Rt as Rectangle,zt as RectangleF,Dn as StandaloneSearchBox,Mn as StreetViewPanorama,Cn as StreetViewService,ne as TrafficLayer,te as TrafficLayerF,re as TransitLayer,ie as TransitLayerF,C as useGoogleMap,X as useJsApiLoader,W as useLoadScript};
//# sourceMappingURL=esm.min.js.map
